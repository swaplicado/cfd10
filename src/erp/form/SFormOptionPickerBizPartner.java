/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SFormOptionPickerBizPartner.java
 *
 * Created on 29/09/2009, 09:43:42 AM
 */

package erp.form;

import erp.data.SDataConstants;
import erp.lib.SLibConstants;
import erp.lib.SLibUtilities;
import erp.lib.form.SFormComboBoxGroup;
import erp.lib.form.SFormComponentItem;
import erp.lib.form.SFormOptionPickerInterface;
import erp.lib.form.SFormUtilities;
import erp.mod.bps.db.SBpsUtils;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.JButton;

/**
 *
 * @author Sergio Flores, Isabel Servín, Sergio Flores
 */
public class SFormOptionPickerBizPartner extends javax.swing.JDialog implements erp.lib.form.SFormOptionPickerInterface, java.awt.event.ActionListener, java.awt.event.ItemListener, java.awt.event.FocusListener {

    private final erp.client.SClientInterface miClient;
    private final int mnOptionType;
    private boolean mbResetingForm;
    private java.lang.Object moFilterKey;

    private int mnFormResult;
    private boolean mbFirstTime;
    private erp.lib.form.SFormComboBoxGroup moComboBoxGroup;

    /**
     * Creates new form SFormOptionPickerBizPartner
     * @param client ERP Client interface.
     * @param type Constants defined in erp.data.SDataConstants: BPSX_BP_SUP, BPSX_BP_CUS.
     */
    public SFormOptionPickerBizPartner(erp.client.SClientInterface client, int type) {
        super(client.getFrame(), true);
        miClient = client;
        mnOptionType = type;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpOptionPane = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jlFiscalId = new javax.swing.JLabel();
        jtfFiscalId = new javax.swing.JTextField();
        jbFiscalId = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jlBizPartner = new javax.swing.JLabel();
        jcbBizPartner = new javax.swing.JComboBox();
        jbBizPartner = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jlBizPartnerBranch = new javax.swing.JLabel();
        jcbBizPartnerBranch = new javax.swing.JComboBox();
        jbBizPartnerBranch = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jlBizPartnerBranchAddress = new javax.swing.JLabel();
        jcbBizPartnerBranchAddress = new javax.swing.JComboBox();
        jbBizPartnerBranchAddress = new javax.swing.JButton();
        jpSouth = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Selección de asociado de negocios");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jpOptionPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccionar un asociado de negocios:"));
        jpOptionPane.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(4, 1, 0, 1));

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlFiscalId.setText("Buscar RFC:");
        jlFiscalId.setPreferredSize(new java.awt.Dimension(135, 23));
        jPanel2.add(jlFiscalId);

        jtfFiscalId.setMinimumSize(new java.awt.Dimension(14, 23));
        jtfFiscalId.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel2.add(jtfFiscalId);

        jbFiscalId.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_look.gif"))); // NOI18N
        jbFiscalId.setLabel("");
        jbFiscalId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel2.add(jbFiscalId);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlBizPartner.setText("Asociado de negocios: *");
        jlBizPartner.setPreferredSize(new java.awt.Dimension(135, 23));
        jPanel3.add(jlBizPartner);

        jcbBizPartner.setMaximumRowCount(12);
        jcbBizPartner.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbBizPartner.setPreferredSize(new java.awt.Dimension(400, 23));
        jcbBizPartner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbBizPartnerKeyPressed(evt);
            }
        });
        jPanel3.add(jcbBizPartner);

        jbBizPartner.setText("...");
        jbBizPartner.setToolTipText("Seleccionar asociado de negocios");
        jbBizPartner.setFocusable(false);
        jbBizPartner.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel3.add(jbBizPartner);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlBizPartnerBranch.setText("Sucursal asociado: *");
        jlBizPartnerBranch.setPreferredSize(new java.awt.Dimension(135, 23));
        jPanel4.add(jlBizPartnerBranch);

        jcbBizPartnerBranch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbBizPartnerBranch.setPreferredSize(new java.awt.Dimension(400, 23));
        jcbBizPartnerBranch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbBizPartnerBranchKeyPressed(evt);
            }
        });
        jPanel4.add(jcbBizPartnerBranch);

        jbBizPartnerBranch.setText("...");
        jbBizPartnerBranch.setToolTipText("Seleccionar sucursal");
        jbBizPartnerBranch.setFocusable(false);
        jbBizPartnerBranch.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel4.add(jbBizPartnerBranch);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlBizPartnerBranchAddress.setText("Domicilio de la operación: *");
        jlBizPartnerBranchAddress.setPreferredSize(new java.awt.Dimension(135, 23));
        jPanel5.add(jlBizPartnerBranchAddress);

        jcbBizPartnerBranchAddress.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbBizPartnerBranchAddress.setPreferredSize(new java.awt.Dimension(400, 23));
        jcbBizPartnerBranchAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbBizPartnerBranchAddressKeyPressed(evt);
            }
        });
        jPanel5.add(jcbBizPartnerBranchAddress);

        jbBizPartnerBranchAddress.setText("...");
        jbBizPartnerBranchAddress.setToolTipText("Seleccionar domicilio de la operación");
        jbBizPartnerBranchAddress.setFocusable(false);
        jbBizPartnerBranchAddress.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel5.add(jbBizPartnerBranchAddress);

        jPanel1.add(jPanel5);

        jpOptionPane.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jpOptionPane, java.awt.BorderLayout.CENTER);

        jpSouth.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jbOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });
        jpSouth.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });
        jpSouth.add(jbCancel);

        getContentPane().add(jpSouth, java.awt.BorderLayout.PAGE_END);

        setSize(new java.awt.Dimension(600, 400));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (mbFirstTime) {
            mbFirstTime = false;
         }
        SLibUtilities.requestComponentFocus(jcbBizPartner);

    }//GEN-LAST:event_formWindowActivated

    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkActionPerformed
        actionOk();
    }//GEN-LAST:event_jbOkActionPerformed

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        actionCancel();
    }//GEN-LAST:event_jbCancelActionPerformed

    private void jcbBizPartnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbBizPartnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            actionBizPartner();
        }
    }//GEN-LAST:event_jcbBizPartnerKeyPressed

    private void jcbBizPartnerBranchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbBizPartnerBranchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            actionBizPartnerBranch();
        }
    }//GEN-LAST:event_jcbBizPartnerBranchKeyPressed

    private void jcbBizPartnerBranchAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbBizPartnerBranchAddressKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            actionBizPartnerBranchAddress();
        }
    }//GEN-LAST:event_jcbBizPartnerBranchAddressKeyPressed

    private void initComponentsExtra() {
        moComboBoxGroup = new SFormComboBoxGroup(miClient);

        jtfFiscalId.addFocusListener(this);
        
        jcbBizPartner.addItemListener(this); 
        jcbBizPartnerBranch.addItemListener(this);

        jbFiscalId.addActionListener(this);
        jbBizPartner.addActionListener(this);
        jbBizPartnerBranch.addActionListener(this);
        jbBizPartnerBranchAddress.addActionListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction actionCancel = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionCancel, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void itemStateChange() {
        Boolean isDefault = null;

        if (jcbBizPartnerBranch.isEnabled() && jcbBizPartnerBranch.getSelectedIndex() <= 0) {
            if (jcbBizPartnerBranch.getItemCount() == 2) {
                jcbBizPartnerBranch.setSelectedIndex(1);
            }
        }

        if (jcbBizPartnerBranchAddress.isEnabled() && jcbBizPartnerBranchAddress.getSelectedIndex() <= 0) {
            if (jcbBizPartnerBranchAddress.getItemCount() == 2) {
                jcbBizPartnerBranchAddress.setSelectedIndex(1);
            }
            else {
                for (int i = 0; i < jcbBizPartnerBranchAddress.getItemCount(); i++) {
                    isDefault = (Boolean) ((SFormComponentItem) jcbBizPartnerBranchAddress.getItemAt(i)).getComplement();
                    if (isDefault != null && isDefault) {
                        jcbBizPartnerBranchAddress.setSelectedIndex(i);
                        break;
                    }
                }
            }
        }
    }
    
    private void actionFiscalId() {
        try {
            int idBp = SBpsUtils.getBizParterIdByFiscalId(miClient.getSession().getStatement(), 
                        jtfFiscalId.getText(), "", 0);
            if (idBp != 0) {
                SFormUtilities.locateComboBoxItem(jcbBizPartner, new int[] { idBp });
            }
            else {
                miClient.showMsgBoxWarning("No se encontró un asociado de negocio con el RFC indicado.");
            }
        }
        catch (Exception e) {
            miClient.showMsgBoxWarning(e.getMessage());
        }
    }

    private void actionBizPartner() {
        SFormOptionPickerInterface picker = miClient.getOptionPicker(mnOptionType);

        picker.formReset();
        picker.formRefreshOptionPane();
        picker.setSelectedPrimaryKey(((SFormComponentItem) jcbBizPartner.getSelectedItem()).getPrimaryKey());
        picker.setFormVisible(true);

        if (picker.getFormResult() == SLibConstants.FORM_RESULT_OK) {
            SFormUtilities.locateComboBoxItem(jcbBizPartner, picker.getSelectedPrimaryKey());
            jcbBizPartner.requestFocus();
        }
    }

    private void actionBizPartnerBranch() {
        SFormOptionPickerInterface picker = miClient.getOptionPicker(SDataConstants.BPSU_BPB);

        picker.formReset();
        picker.setFilterKey(((SFormComponentItem) jcbBizPartner.getSelectedItem()).getPrimaryKey());
        picker.formRefreshOptionPane();
        picker.setSelectedPrimaryKey(((SFormComponentItem) jcbBizPartnerBranch.getSelectedItem()).getPrimaryKey());
        picker.setFormVisible(true);

        if (picker.getFormResult() == SLibConstants.FORM_RESULT_OK) {
            SFormUtilities.locateComboBoxItem(jcbBizPartnerBranch, picker.getSelectedPrimaryKey());
            jcbBizPartnerBranch.requestFocus();
        }
    }

    private void actionBizPartnerBranchAddress() {
        SFormOptionPickerInterface picker = miClient.getOptionPicker(SDataConstants.BPSU_BPB_ADD);

        picker.formReset();
        picker.setFilterKey(((SFormComponentItem) jcbBizPartnerBranch.getSelectedItem()).getPrimaryKey());
        picker.formRefreshOptionPane();
        picker.setSelectedPrimaryKey(((SFormComponentItem) jcbBizPartnerBranchAddress.getSelectedItem()).getPrimaryKey());
        picker.setFormVisible(true);

        if (picker.getFormResult() == SLibConstants.FORM_RESULT_OK) {
            SFormUtilities.locateComboBoxItem(jcbBizPartnerBranchAddress, picker.getSelectedPrimaryKey());
            jcbBizPartnerBranchAddress.requestFocus();
        }
    }

    private void actionOk() {
        if (jcbBizPartner.getSelectedIndex() <= 0) {
            miClient.showMsgBoxWarning("Se debe seleccionar una opción para el campo '" + jlBizPartner.getText() + "'.");
            jcbBizPartner.requestFocus();
        }
        else if (jcbBizPartnerBranch.getSelectedIndex() <= 0) {
            miClient.showMsgBoxWarning("Se debe seleccionar una opción para el campo '" + jlBizPartnerBranch.getText() + "'.");
            jcbBizPartnerBranch.requestFocus();
        }
        else if (jcbBizPartnerBranchAddress.getSelectedIndex() <= 0) {
            miClient.showMsgBoxWarning("Se debe seleccionar una opción para el campo '" + jlBizPartnerBranchAddress.getText() + "'.");
            jcbBizPartnerBranchAddress.requestFocus();
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    public void publicActionOk() {
        actionOk();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton jbBizPartner;
    private javax.swing.JButton jbBizPartnerBranch;
    private javax.swing.JButton jbBizPartnerBranchAddress;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbFiscalId;
    private javax.swing.JButton jbOk;
    private javax.swing.JComboBox jcbBizPartner;
    private javax.swing.JComboBox jcbBizPartnerBranch;
    private javax.swing.JComboBox jcbBizPartnerBranchAddress;
    private javax.swing.JLabel jlBizPartner;
    private javax.swing.JLabel jlBizPartnerBranch;
    private javax.swing.JLabel jlBizPartnerBranchAddress;
    private javax.swing.JLabel jlFiscalId;
    private javax.swing.JPanel jpOptionPane;
    private javax.swing.JPanel jpSouth;
    private javax.swing.JTextField jtfFiscalId;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formReset() {
        jtfFiscalId.setText("");
        mbResetingForm = true;

        mnFormResult = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moComboBoxGroup.reset();

        mbResetingForm = false;
    }

    @Override
    public void formRefreshOptionPane() {
        mbResetingForm = true;

        moComboBoxGroup.clear();
        moComboBoxGroup.addComboBox(mnOptionType, jcbBizPartner, jbBizPartner);
        moComboBoxGroup.addComboBox(SDataConstants.BPSU_BPB, jcbBizPartnerBranch, jbBizPartnerBranch);
        moComboBoxGroup.addComboBox(SDataConstants.BPSU_BPB_ADD, jcbBizPartnerBranchAddress, jbBizPartnerBranchAddress);

        mbResetingForm = false;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getOptionType() {
        return mnOptionType;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setFilterKey(java.lang.Object filterKey) {
        moFilterKey = filterKey;
    }

    @Override
    public void setSelectedPrimaryKey(java.lang.Object pk) {
        if (pk == null) {
            moComboBoxGroup.reset();
        }
        else {
            SFormUtilities.locateComboBoxItem(jcbBizPartner, new int[] { ((int[]) pk)[0] });
            SFormUtilities.locateComboBoxItem(jcbBizPartnerBranch, new int[] { ((int[]) pk)[1] });
            SFormUtilities.locateComboBoxItem(jcbBizPartnerBranchAddress, new int[] { ((int[]) pk)[1], ((int[]) pk)[2] });
        }
    }

    @Override
    public java.lang.Object getSelectedPrimaryKey() {
        int[] pk = new int[] {
            ((int[]) ((SFormComponentItem) jcbBizPartner.getSelectedItem()).getPrimaryKey())[0],
            ((int[]) ((SFormComponentItem) jcbBizPartnerBranch.getSelectedItem()).getPrimaryKey())[0],
            ((int[]) ((SFormComponentItem) jcbBizPartnerBranchAddress.getSelectedItem()).getPrimaryKey())[1] };

        return pk;
    }

    @Override
    public erp.lib.table.STableRow getSelectedOption() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            JButton button = (JButton) e.getSource();

            if (button == jbFiscalId) {
                actionFiscalId();
            }
            else if (button == jbBizPartner) {
                actionBizPartner();
            }
            else if (button == jbBizPartnerBranch) {
                actionBizPartnerBranch();
            }
            else if (button == jbBizPartnerBranchAddress) {
                actionBizPartnerBranchAddress();
            }
        }
    }

    @Override
    public void itemStateChanged(java.awt.event.ItemEvent e) {
        if (!mbResetingForm) {
            itemStateChange();
        }
    }

    @Override
    public void focusGained(FocusEvent e) {
    }

    @Override
    public void focusLost(FocusEvent e) {
        jtfFiscalId.setText(jtfFiscalId.getText().toUpperCase());
    }
}
