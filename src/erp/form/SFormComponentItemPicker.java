/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SFormComponentItemPicker.java
 *
 * Created on 26/03/2010, 12:32:13 PM
 */

package erp.form;

import erp.data.SDataConstants;
import erp.lib.SLibConstants;
import erp.lib.form.SFormComponentItem;
import erp.lib.form.SFormUtilities;
import java.awt.event.KeyEvent;

/**
 *
 * @author Sergio Flores
 */
public class SFormComponentItemPicker extends javax.swing.JDialog implements erp.lib.form.SFormInterface {

    private erp.client.SClientInterface miClient;
    private int mnComponentItemType;

    private int mnFormResult;
    private boolean mbFirstTime;
    private java.lang.Object moFilterKey;

    /** Creates new form SFormComponentItemPicker */
    public SFormComponentItemPicker(erp.client.SClientInterface client, int type) {
        super(client.getFrame(), true);

        miClient = client;
        mnComponentItemType = type;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jlOption = new javax.swing.JLabel();
        jcbOption = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seleccionar opción");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl+Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jbOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });
        jPanel1.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jbCancel.setPreferredSize(new java.awt.Dimension(75, 23));
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });
        jPanel1.add(jbCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones disponibles:"));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jlOption.setText("Opción:");
        jlOption.setPreferredSize(new java.awt.Dimension(350, 23));
        jPanel2.add(jlOption);

        jcbOption.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbOption.setPreferredSize(new java.awt.Dimension(350, 23));
        jcbOption.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jcbOptionKeyReleased(evt);
            }
        });
        jPanel2.add(jcbOption);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }// </editor-fold>//GEN-END:initComponents

    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkActionPerformed
        actionOk();
    }//GEN-LAST:event_jbOkActionPerformed

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        actionCancel();
    }//GEN-LAST:event_jbCancelActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void jcbOptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbOptionKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            actionOk();
        }
    }//GEN-LAST:event_jcbOptionKeyReleased

    private void initComponentsExtra() {
        SFormUtilities.createActionMap(rootPane, this, "actionOk", "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);
        SFormUtilities.createActionMap(rootPane, this, "actionCancel", "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
            jcbOption.requestFocus();
        }
    }

    public void actionOk() {
        if (jcbOption.getSelectedIndex() <= 0) {
            miClient.showMsgBoxWarning(SLibConstants.MSG_ERR_GUI_FIELD_EMPTY + "'" + jlOption.getText() + "'");
            jcbOption.requestFocus();
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    public void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOk;
    private javax.swing.JComboBox jcbOption;
    private javax.swing.JLabel jlOption;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mbFirstTime = true;
        moFilterKey = null;

        switch (mnComponentItemType) {
            case SDataConstants.FINS_TP_ACC_BP:
                jlOption.setText("Tipo de cuenta contable para asociados de negocios:");
                break;
            case SDataConstants.FINS_TP_ACC_ITEM:
                jlOption.setText("Tipo de cuenta contable para ítems:");
                break;
            default:
        }

        SFormUtilities.locateComboBoxItem(jcbOption, new int[] { 0 });
    }

    @Override
    @SuppressWarnings("unchecked")
    public void formRefreshCatalogues() {
        SFormUtilities.populateComboBox(miClient, jcbOption, mnComponentItemType, moFilterKey);
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        return null;
    }

    @Override
    public void setFormStatus(int status) {

    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return SLibConstants.UNDEFINED;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {

    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        return null;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        switch (type) {
            case SLibConstants.VALUE_FILTER_KEY:
                moFilterKey = value;
                break;
            default:
        }
    }

    @Override
    public java.lang.Object getValue(int type) {
        Object value = null;

        switch (type) {
            case SLibConstants.VALUE_PRIMARY_KEY:
                value = ((SFormComponentItem) jcbOption.getSelectedItem()).getPrimaryKey();
                break;
            default:
        }

        return value;
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }
}
