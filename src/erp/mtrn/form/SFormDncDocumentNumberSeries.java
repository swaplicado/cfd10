/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SFormDncDocumentNumberSeries.java
 *
 * Created on 7/07/2010, 05:46:07 PM
 */

package erp.mtrn.form;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.data.SProcConstants;
import erp.lib.SLibConstants;
import erp.lib.SLibUtilities;
import erp.lib.form.SFormComponentItem;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.mtrn.data.SDataDiogDncDocumentNumberSeries;
import erp.mtrn.data.SDataDpsDncDocumentNumberSeries;
import erp.mtrn.data.SDataDpsDocumentNumberSeries;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.JComboBox;

/**
 *
 * @author Alfonso Flores, Sergio Flores
 */
public class SFormDncDocumentNumberSeries extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener, java.awt.event.ItemListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mtrn.data.SDataDpsDncDocumentNumberSeries moDpsDncDocumentNumberSeries;
    private erp.mtrn.data.SDataDiogDncDocumentNumberSeries moDiogDncDocumentNumberSeries;
    private erp.mtrn.data.SDataDpsDocumentNumberSeries moDpsDocumentNumberSeries;
    private erp.mtrn.data.SDataDiogDocumentNumberSeries moDiogDocumentNumberSeries;
    private erp.lib.form.SFormField moFieldPkDocNumberingCenterId;
    private erp.lib.form.SFormField moFieldPkDocNumberSeriesId;
    private erp.lib.form.SFormField moFieldNumberStart;
    private erp.lib.form.SFormField moFieldNumberEnd_n;
    private erp.lib.form.SFormField moFieldApproveDate_n;
    private erp.lib.form.SFormField moFieldApproveYear_n;
    private erp.lib.form.SFormField moFieldApproveNumber_n;
    private erp.lib.form.SFormField moFieldIsDeleted;

    private boolean mbParamIsPurchases;

    /** Creates new form SFormDncDocumentNumberSeries */
    public SFormDncDocumentNumberSeries(erp.client.SClientInterface client, int type) {
        super(client.getFrame(), true);
        miClient =  client;
        mnFormType = type;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlDocCategory = new javax.swing.JLabel();
        jtfDocCategory = new javax.swing.JTextField();
        jlPkDocNumberingCenterId = new javax.swing.JLabel();
        jcbPkDocNumberingCenterId = new javax.swing.JComboBox<SFormComponentItem>();
        jlPkDocNumberSeriesId = new javax.swing.JLabel();
        jcbPkDocNumberSeriesId = new javax.swing.JComboBox<SFormComponentItem>();
        jlNumberStart = new javax.swing.JLabel();
        jtfNumberStart = new javax.swing.JTextField();
        jlNumberEnd_n = new javax.swing.JLabel();
        jtfNumberEnd_n = new javax.swing.JTextField();
        jlApproveDate_n = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jftApproveDate_n = new javax.swing.JFormattedTextField();
        jbApproveDate_n = new javax.swing.JButton();
        jlApproveYear_n = new javax.swing.JLabel();
        jtfApproveYear_n = new javax.swing.JTextField();
        jlApproveNumber_n = new javax.swing.JLabel();
        jtfApproveNumber_n = new javax.swing.JTextField();
        jckIsDeleted = new javax.swing.JCheckBox();
        jlDummy01 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Centro de foliado vs. serie de folios");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(392, 33));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jPanel1.add(jbCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(9, 2, 0, 1));

        jlDocCategory.setText("Categoría de documento:");
        jPanel3.add(jlDocCategory);

        jtfDocCategory.setEditable(false);
        jtfDocCategory.setText("CATEGORY");
        jtfDocCategory.setFocusable(false);
        jPanel3.add(jtfDocCategory);

        jlPkDocNumberingCenterId.setForeground(java.awt.Color.blue);
        jlPkDocNumberingCenterId.setText("Centro de foliado: *");
        jPanel3.add(jlPkDocNumberingCenterId);

        jcbPkDocNumberingCenterId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(jcbPkDocNumberingCenterId);

        jlPkDocNumberSeriesId.setForeground(java.awt.Color.blue);
        jlPkDocNumberSeriesId.setText("Serie de folios: *");
        jPanel3.add(jlPkDocNumberSeriesId);

        jcbPkDocNumberSeriesId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(jcbPkDocNumberSeriesId);

        jlNumberStart.setText("Folio inicial: *");
        jPanel3.add(jlNumberStart);

        jtfNumberStart.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfNumberStart.setText("0");
        jPanel3.add(jtfNumberStart);

        jlNumberEnd_n.setText("Folio final:");
        jPanel3.add(jlNumberEnd_n);

        jtfNumberEnd_n.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfNumberEnd_n.setText("0");
        jPanel3.add(jtfNumberEnd_n);

        jlApproveDate_n.setText("Fecha de aprobación de folios:");
        jlApproveDate_n.setPreferredSize(new java.awt.Dimension(105, 23));
        jPanel3.add(jlApproveDate_n);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jftApproveDate_n.setText("yyyy/mm/dd");
        jftApproveDate_n.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel5.add(jftApproveDate_n);

        jbApproveDate_n.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_cal.gif"))); // NOI18N
        jbApproveDate_n.setToolTipText("Seleccionar fecha");
        jbApproveDate_n.setFocusable(false);
        jbApproveDate_n.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel5.add(jbApproveDate_n);

        jPanel3.add(jPanel5);

        jlApproveYear_n.setText("Año de aprobación de folios:");
        jPanel3.add(jlApproveYear_n);

        jtfApproveYear_n.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfApproveYear_n.setText("0");
        jPanel3.add(jtfApproveYear_n);

        jlApproveNumber_n.setText("No. de aprobación de folios: *");
        jPanel3.add(jlApproveNumber_n);

        jtfApproveNumber_n.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfApproveNumber_n.setText("0");
        jPanel3.add(jtfApproveNumber_n);

        jckIsDeleted.setText("Registro eliminado");
        jPanel3.add(jckIsDeleted);
        jPanel3.add(jlDummy01);

        jPanel2.add(jPanel3, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(400, 325));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void initComponentsExtra() {
        switch (mnFormType) {
            case SDataConstants.TRN_DNC_DPS_DNS:
                jtfDocCategory.setText("DOCUMENTO DE COMPRAS-VENTAS");
                jlApproveYear_n.setEnabled(true);
                jlApproveNumber_n.setEnabled(true);
                break;
            case SDataConstants.TRN_DNC_DIOG_DNS:
                jtfDocCategory.setText("DOCUMENTO DE MERCANCÍAS");
                jlApproveYear_n.setEnabled(false);
                jlApproveNumber_n.setEnabled(false);
                break;
            default:
                miClient.showMsgBoxWarning(SLibConstants.MSG_ERR_UTIL_UNKNOWN_OPTION);
        }

        moFieldPkDocNumberingCenterId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbPkDocNumberingCenterId, jlPkDocNumberingCenterId);
        moFieldPkDocNumberSeriesId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbPkDocNumberSeriesId, jlPkDocNumberSeriesId);
        moFieldNumberStart = new SFormField(miClient, SLibConstants.DATA_TYPE_INTEGER, true, jtfNumberStart, jlNumberStart);
        moFieldNumberStart.setDecimalFormat(miClient.getSessionXXX().getFormatters().getSimpleIntegerFormat());
        moFieldNumberEnd_n = new SFormField(miClient, SLibConstants.DATA_TYPE_INTEGER, false, jtfNumberEnd_n, jlNumberEnd_n);
        moFieldNumberEnd_n.setDecimalFormat(miClient.getSessionXXX().getFormatters().getSimpleIntegerFormat());
        moFieldApproveDate_n = new SFormField(miClient, SLibConstants.DATA_TYPE_DATE, false, jftApproveDate_n, jlApproveDate_n);
        moFieldApproveDate_n.setPickerButton(jbApproveDate_n);
        moFieldApproveYear_n = new SFormField(miClient, SLibConstants.DATA_TYPE_INTEGER, false, jtfApproveYear_n, jlApproveYear_n);
        moFieldApproveYear_n.setDecimalFormat(miClient.getSessionXXX().getFormatters().getSimpleIntegerFormat());
        moFieldApproveNumber_n = new SFormField(miClient, SLibConstants.DATA_TYPE_INTEGER, true, jtfApproveNumber_n, jlApproveNumber_n);
        moFieldApproveNumber_n.setDecimalFormat(miClient.getSessionXXX().getFormatters().getSimpleIntegerFormat());
        moFieldIsDeleted = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDeleted);

        mvFields = new Vector<>();
        mvFields.add(moFieldPkDocNumberingCenterId);
        mvFields.add(moFieldPkDocNumberSeriesId);
        mvFields.add(moFieldNumberStart);
        mvFields.add(moFieldNumberEnd_n);
        mvFields.add(moFieldApproveDate_n);
        mvFields.add(moFieldApproveYear_n);
        mvFields.add(moFieldApproveNumber_n);
        mvFields.add(moFieldIsDeleted);

        jbOk.addActionListener(this);
        jbCancel.addActionListener(this);
        jbApproveDate_n.addActionListener(this);
        jcbPkDocNumberSeriesId.addItemListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), action, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;

            if (jcbPkDocNumberingCenterId.isEnabled()) {
                jcbPkDocNumberingCenterId.requestFocus();
            }
            else {
                jtfNumberStart.requestFocus();
            }
        }
    }

    private void itemStateChangedDocNumberSeriesId() {
        moDpsDocumentNumberSeries = null;
        moDiogDocumentNumberSeries = null;

        jftApproveDate_n.setEnabled(false);
        jbApproveDate_n.setEnabled(false);
        jtfApproveYear_n.setEnabled(false);
        jtfApproveNumber_n.setEnabled(false);

        if (mnFormType == SDataConstants.TRN_DNC_DPS_DNS) {
            if (jcbPkDocNumberSeriesId.getSelectedIndex() > 0) {
                moDpsDocumentNumberSeries = (SDataDpsDocumentNumberSeries) SDataUtilities.readRegistry(
                        miClient, SDataConstants.TRN_DNS_DPS, moFieldPkDocNumberSeriesId.getKeyAsIntArray(), SLibConstants.EXEC_MODE_VERBOSE);

                if (moDpsDocumentNumberSeries != null) {
                    if (SLibUtilities.compareKeys(SDataConstantsSys.TRNS_CL_DPS_SAL_DOC, new int[] { moDpsDocumentNumberSeries.getFkDpsCategoryId(), moDpsDocumentNumberSeries.getFkDpsClassId() }) ||
                        SLibUtilities.compareKeys(SDataConstantsSys.TRNS_CL_DPS_SAL_ADJ, new int[] { moDpsDocumentNumberSeries.getFkDpsCategoryId(), moDpsDocumentNumberSeries.getFkDpsClassId() })) {
                        jftApproveDate_n.setEnabled(true);
                        jbApproveDate_n.setEnabled(true);
                        jtfApproveYear_n.setEnabled(true);
                        jtfApproveNumber_n.setEnabled(true);
                    }
                }
            }
        }
    }

    private void actionOk() {
        SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    private void actionApproveDate_n() {
        miClient.getGuiDatePickerXXX().pickDate(moFieldApproveDate_n.getDate(), moFieldApproveDate_n);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton jbApproveDate_n;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOk;
    private javax.swing.JComboBox<SFormComponentItem> jcbPkDocNumberSeriesId;
    private javax.swing.JComboBox<SFormComponentItem> jcbPkDocNumberingCenterId;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JFormattedTextField jftApproveDate_n;
    private javax.swing.JLabel jlApproveDate_n;
    private javax.swing.JLabel jlApproveNumber_n;
    private javax.swing.JLabel jlApproveYear_n;
    private javax.swing.JLabel jlDocCategory;
    private javax.swing.JLabel jlDummy01;
    private javax.swing.JLabel jlNumberEnd_n;
    private javax.swing.JLabel jlNumberStart;
    private javax.swing.JLabel jlPkDocNumberSeriesId;
    private javax.swing.JLabel jlPkDocNumberingCenterId;
    private javax.swing.JTextField jtfApproveNumber_n;
    private javax.swing.JTextField jtfApproveYear_n;
    private javax.swing.JTextField jtfDocCategory;
    private javax.swing.JTextField jtfNumberEnd_n;
    private javax.swing.JTextField jtfNumberStart;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mbResetingForm = true;

        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moDpsDncDocumentNumberSeries = null;
        moDiogDncDocumentNumberSeries = null;
        moDpsDocumentNumberSeries = null;
        moDiogDocumentNumberSeries = null;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        jcbPkDocNumberingCenterId.setEnabled(true);
        jcbPkDocNumberSeriesId.setEnabled(true);
        jftApproveDate_n.setEnabled(false);
        jbApproveDate_n.setEnabled(false);
        jtfApproveYear_n.setEnabled(false);
        jtfApproveNumber_n.setEnabled(false);
        jckIsDeleted.setEnabled(false);

        mbResetingForm = false;
    }

    @Override
    public void formRefreshCatalogues() {
        switch (mnFormType) {
            case SDataConstants.TRN_DNC_DPS_DNS:
                SFormUtilities.populateComboBox(miClient, jcbPkDocNumberingCenterId, SDataConstants.TRN_DNC_DPS);
                SFormUtilities.populateComboBox(miClient, jcbPkDocNumberSeriesId, SDataConstants.TRN_DNS_DPS, new int[] { mbParamIsPurchases ? SDataConstantsSys.TRNS_CT_DPS_PUR : SDataConstantsSys.TRNS_CT_DPS_SAL });
                break;
            case SDataConstants.TRN_DNC_DIOG_DNS:
                SFormUtilities.populateComboBox(miClient, jcbPkDocNumberingCenterId, SDataConstants.TRN_DNC_DIOG);
                SFormUtilities.populateComboBox(miClient, jcbPkDocNumberSeriesId, SDataConstants.TRN_DNS_DIOG, new int[] { mbParamIsPurchases ? SDataConstantsSys.TRNS_CT_IOG_IN : SDataConstantsSys.TRNS_CT_IOG_OUT });
                break;
            default:
        }
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        SFormValidation validation = new SFormValidation();
        Object[] oParamsIn = null;

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        if (!validation.getIsError()) {
            switch (mnFormType) {
                case SDataConstants.TRN_DNC_DPS_DNS:
                    oParamsIn = new Object[] { moFieldPkDocNumberingCenterId.getKeyAsIntArray()[0], moFieldPkDocNumberSeriesId.getKeyAsIntArray()[0] };
                    break;
                case SDataConstants.TRN_DNC_DIOG_DNS:
                    oParamsIn = new Object[] { moFieldPkDocNumberingCenterId.getKeyAsIntArray()[0], moFieldPkDocNumberSeriesId.getKeyAsIntArray()[0] };
                    break;
                default:
            }

            if (moFieldNumberStart.getInteger() >= moFieldNumberEnd_n.getInteger() && moFieldNumberEnd_n.getInteger() > 0) {
                validation.setMessage("El valor del folio final debe ser mayor que el folio inicial");
                validation.setComponent(jtfNumberEnd_n);
            }
            else if (mnFormType == SDataConstants.TRN_DNC_DPS_DNS && moDpsDncDocumentNumberSeries == null) {
                if (SDataUtilities.callProcedureVal(miClient, SProcConstants.TRN_DNC_DPS_DNS_VAL, oParamsIn, SLibConstants.EXEC_MODE_VERBOSE) > 0) {
                    validation.setMessage("Ya existe un rango de folios activo para la serie seleccionada.");
                    validation.setComponent(jcbPkDocNumberSeriesId);
                }
            }
            else if ((mnFormType == SDataConstants.TRN_DNC_DIOG_DNS && moDiogDncDocumentNumberSeries == null)) {
                if (SDataUtilities.callProcedureVal(miClient, SProcConstants.TRN_DNC_DIOG_DNS_VAL, oParamsIn, SLibConstants.EXEC_MODE_VERBOSE) > 0) {
                    validation.setMessage("Ya existe un rango de folios activo para la serie seleccionada.");
                    validation.setComponent(jcbPkDocNumberSeriesId);
                }
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        switch (mnFormType) {
            case SDataConstants.TRN_DNC_DPS_DNS:
                moDpsDncDocumentNumberSeries = (SDataDpsDncDocumentNumberSeries) registry;
                moFieldPkDocNumberingCenterId.setFieldValue(new int[] { moDpsDncDocumentNumberSeries.getPkDocNumberingCenterId() });
                moFieldPkDocNumberSeriesId.setFieldValue(new int[] { moDpsDncDocumentNumberSeries.getPkDocNumberSeriesId() });
                moFieldNumberStart.setFieldValue(moDpsDncDocumentNumberSeries.getNumberStart());
                moFieldNumberEnd_n.setFieldValue(moDpsDncDocumentNumberSeries.getNumberEnd_n());
                moFieldApproveDate_n.setFieldValue(moDpsDncDocumentNumberSeries.getApproveDate_n());
                moFieldApproveYear_n.setFieldValue(moDpsDncDocumentNumberSeries.getApproveYear_n());
                moFieldApproveNumber_n.setFieldValue(moDpsDncDocumentNumberSeries.getApproveNumber_n());
                moFieldIsDeleted.setFieldValue(moDpsDncDocumentNumberSeries.getIsDeleted());
                break;

            case SDataConstants.TRN_DNC_DIOG_DNS:
                moDiogDncDocumentNumberSeries = (SDataDiogDncDocumentNumberSeries) registry;
                moFieldPkDocNumberingCenterId.setFieldValue(new int[] { moDiogDncDocumentNumberSeries.getPkDocNumberingCenterId() });
                moFieldPkDocNumberSeriesId.setFieldValue(new int[] { moDiogDncDocumentNumberSeries.getPkDocNumberSeriesId() });
                moFieldNumberStart.setFieldValue(moDiogDncDocumentNumberSeries.getNumberStart());
                moFieldNumberEnd_n.setFieldValue(moDiogDncDocumentNumberSeries.getNumberEnd_n());
                moFieldIsDeleted.setFieldValue(moDiogDncDocumentNumberSeries.getIsDeleted());
                break;

            default:
        }

        jcbPkDocNumberingCenterId.setEnabled(false);
        jcbPkDocNumberSeriesId.setEnabled(false);
        jckIsDeleted.setEnabled(true);
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        switch (mnFormType) {
            case SDataConstants.TRN_DNC_DPS_DNS:
                if (moDpsDncDocumentNumberSeries == null) {
                    moDpsDncDocumentNumberSeries = new SDataDpsDncDocumentNumberSeries();
                    moDpsDncDocumentNumberSeries.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
                }
                else {
                    moDpsDncDocumentNumberSeries.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
                }

                moDpsDncDocumentNumberSeries.setPkDocNumberingCenterId(moFieldPkDocNumberingCenterId.getKeyAsIntArray()[0]);
                moDpsDncDocumentNumberSeries.setPkDocNumberSeriesId(moFieldPkDocNumberSeriesId.getKeyAsIntArray()[0]);
                moDpsDncDocumentNumberSeries.setNumberStart(moFieldNumberStart.getInteger());
                moDpsDncDocumentNumberSeries.setNumberEnd_n(moFieldNumberEnd_n.getInteger());
                moDpsDncDocumentNumberSeries.setApproveDate_n(!jftApproveDate_n.isEditable() ? null : moFieldApproveDate_n.getDate());
                moDpsDncDocumentNumberSeries.setApproveYear_n(!jtfApproveYear_n.isEnabled() ? 0 : moFieldApproveYear_n.getInteger());
                moDpsDncDocumentNumberSeries.setApproveNumber_n(!jtfApproveNumber_n.isEnabled() ? 0 : moFieldApproveNumber_n.getInteger());
                moDpsDncDocumentNumberSeries.setIsDeleted(moFieldIsDeleted.getBoolean());
                break;

            case SDataConstants.TRN_DNC_DIOG_DNS:
                if (moDiogDncDocumentNumberSeries == null) {
                    moDiogDncDocumentNumberSeries = new SDataDiogDncDocumentNumberSeries();
                    moDiogDncDocumentNumberSeries.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
                }
                else {
                    moDiogDncDocumentNumberSeries.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
                }

                moDiogDncDocumentNumberSeries.setPkDocNumberingCenterId(moFieldPkDocNumberingCenterId.getKeyAsIntArray()[0]);
                moDiogDncDocumentNumberSeries.setPkDocNumberSeriesId(moFieldPkDocNumberSeriesId.getKeyAsIntArray()[0]);
                moDiogDncDocumentNumberSeries.setNumberStart(moFieldNumberStart.getInteger());
                moDiogDncDocumentNumberSeries.setNumberEnd_n(moFieldNumberEnd_n.getInteger());
                moDiogDncDocumentNumberSeries.setIsDeleted(moFieldIsDeleted.getBoolean());
                break;

            default:
        }

        return moDpsDncDocumentNumberSeries == null ? moDiogDncDocumentNumberSeries : moDpsDncDocumentNumberSeries;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        switch (type) {
            case SDataConstantsSys.VALUE_IS_PUR:
                mbParamIsPurchases = (Boolean) value;
                break;
            default:
        }
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
            else if (button == jbApproveDate_n) {
                actionApproveDate_n();
            }
        }
    }

    public void setParamIsPurchases(boolean b) { mbParamIsPurchases = b; }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() instanceof JComboBox) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                JComboBox comboBox = (JComboBox) e.getSource();

                if (comboBox == jcbPkDocNumberSeriesId) {
                    itemStateChangedDocNumberSeriesId();
                }
            }
        }
    }
}
