package erp.mtrn.form;

import erp.data.SDataConstants;
import erp.lib.SLibConstants;
import erp.lib.form.SFormField;
import erp.lib.form.SFormValidation;
import java.awt.event.ItemEvent;
import java.util.Vector;
import erp.mtrn.data.SDataDpsEntry;
import javax.swing.JLabel;

public class SFormDpsComEntry extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener, java.awt.event.ItemListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private java.util.Vector<SFormField> mvFields;
    private erp.client.SClientInterface miClient;
    private erp.lib.form.SFormField moFieldDriver;
    private erp.lib.form.SFormField moFieldPlate;
    private erp.lib.form.SFormField moFieldContainer;
    private erp.lib.form.SFormField moFieldQualitySeal;
    private erp.lib.form.SFormField moFieldSecuritySeal;
    private erp.lib.form.SFormField moFieldTicket;
    private erp.lib.form.SFormField moFieldVgm;
    private erp.mtrn.data.SDataDpsEntry moDpsEntry;

   
    public SFormDpsComEntry(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        mnFormType = SDataConstants.TRN_DPS_NTS;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpControls = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jpControls1 = new javax.swing.JPanel();
        jbOk1 = new javax.swing.JButton();
        jbCancel1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jlDriver = new javax.swing.JLabel();
        jtfDriver = new javax.swing.JTextField();
        jlPlate = new javax.swing.JLabel();
        jtfPlate = new javax.swing.JTextField();
        jlContainerTank = new javax.swing.JLabel();
        jtfContTank = new javax.swing.JTextField();
        jlQualitySeal = new javax.swing.JLabel();
        jtfSealQuality = new javax.swing.JTextField();
        jlSecuritySeal = new javax.swing.JLabel();
        jtfSecuritySeal = new javax.swing.JTextField();
        jlTicket = new javax.swing.JLabel();
        jtfTicket = new javax.swing.JTextField();
        jlVgm = new javax.swing.JLabel();
        jtfVgm = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Datos Comerciallización");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jpControls.setPreferredSize(new java.awt.Dimension(392, 33));
        jpControls.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jpControls.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jpControls.add(jbCancel);

        getContentPane().add(jpControls, java.awt.BorderLayout.PAGE_END);

        jpControls1.setPreferredSize(new java.awt.Dimension(392, 33));
        jpControls1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk1.setText("Aceptar");
        jbOk1.setToolTipText("[Ctrl + Enter]");
        jbOk1.setPreferredSize(new java.awt.Dimension(75, 23));
        jpControls1.add(jbOk1);

        jbCancel1.setText("Cancelar");
        jbCancel1.setToolTipText("[Escape]");
        jpControls1.add(jbCancel1);

        getContentPane().add(jpControls1, java.awt.BorderLayout.PAGE_END);

        jlDriver.setText("Chofer:");
        jlDriver.setPreferredSize(new java.awt.Dimension(295, 23));

        jtfDriver.setText("DRIVER");
        jtfDriver.setPreferredSize(new java.awt.Dimension(300, 30));

        jlPlate.setText("Placas vehículo:");
        jlPlate.setPreferredSize(new java.awt.Dimension(295, 23));

        jtfPlate.setText("VEHICLE NUMBER");
        jtfPlate.setPreferredSize(new java.awt.Dimension(300, 30));

        jlContainerTank.setText("Remolque, tanq./cont.:");
        jlContainerTank.setPreferredSize(new java.awt.Dimension(295, 23));

        jtfContTank.setText("TRAILER CONTAINER TANK");
        jtfContTank.setPreferredSize(new java.awt.Dimension(300, 30));

        jlQualitySeal.setText("Sello(s) de calidad:");
        jlQualitySeal.setPreferredSize(new java.awt.Dimension(295, 23));

        jtfSealQuality.setText("SEAL QUALITY");
        jtfSealQuality.setPreferredSize(new java.awt.Dimension(300, 30));

        jlSecuritySeal.setText("Sello(s) de seguridad:");
        jlSecuritySeal.setPreferredSize(new java.awt.Dimension(295, 23));

        jtfSecuritySeal.setText("SEAL SECURITY");
        jtfSecuritySeal.setPreferredSize(new java.awt.Dimension(300, 30));

        jlTicket.setText("Boleto(s) báscula:");
        jlTicket.setPreferredSize(new java.awt.Dimension(295, 23));

        jtfTicket.setText("TICKET");
        jtfTicket.setPreferredSize(new java.awt.Dimension(300, 30));

        jlVgm.setText("VGM:");
        jlVgm.setPreferredSize(new java.awt.Dimension(295, 23));

        jtfVgm.setText("VGM");
        jtfVgm.setPreferredSize(new java.awt.Dimension(300, 30));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlVgm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfVgm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jlDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtfDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jlContainerTank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jlSecuritySeal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfContTank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfSecuritySeal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jtfPlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlQualitySeal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfSealQuality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jlTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jlPlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlContainerTank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlQualitySeal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfContTank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfSealQuality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSecuritySeal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfSecuritySeal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlVgm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfVgm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133))
        );

        getContentPane().add(jPanel9, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(692, 336));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void initComponentsExtra() {
        
        moFieldDriver = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfDriver, jlDriver);
        moFieldDriver.setLengthMax(50);
        
        moFieldPlate = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfPlate, jlPlate);
        moFieldPlate.setLengthMax(25);
        
        moFieldTicket = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfTicket, jlTicket);
        moFieldTicket.setLengthMax(50);
        
        moFieldContainer = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfContTank, jlContainerTank);
        moFieldContainer.setLengthMax(50);
        
        moFieldQualitySeal = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfSealQuality, jlQualitySeal);
        moFieldQualitySeal.setLengthMax(100);
        
        moFieldSecuritySeal = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfSecuritySeal, jlSecuritySeal);
        moFieldSecuritySeal.setLengthMax(50);
        
        moFieldVgm = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfVgm, jlVgm);
        moFieldVgm.setLengthMax(15);

        mvFields = new Vector<>();
        mvFields.add(moFieldDriver);
        mvFields.add(moFieldPlate);
        mvFields.add(moFieldTicket);
        mvFields.add(moFieldContainer);
        mvFields.add(moFieldQualitySeal);
        mvFields.add(moFieldSecuritySeal);
        mvFields.add(moFieldVgm);

        jbOk1.addActionListener(this);
        jbCancel1.addActionListener(this);
        
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
        }
    }

    private void actionOk() {
        mnFormResult = SLibConstants.FORM_RESULT_OK;
        setVisible(false);
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbCancel1;
    private javax.swing.JButton jbOk;
    private javax.swing.JButton jbOk1;
    private javax.swing.JLabel jlContainerTank;
    private javax.swing.JLabel jlDriver;
    private javax.swing.JLabel jlPlate;
    private javax.swing.JLabel jlQualitySeal;
    private javax.swing.JLabel jlSecuritySeal;
    private javax.swing.JLabel jlTicket;
    private javax.swing.JLabel jlVgm;
    private javax.swing.JPanel jpControls;
    private javax.swing.JPanel jpControls1;
    private javax.swing.JTextField jtfContTank;
    private javax.swing.JTextField jtfDriver;
    private javax.swing.JTextField jtfPlate;
    private javax.swing.JTextField jtfSealQuality;
    private javax.swing.JTextField jtfSecuritySeal;
    private javax.swing.JTextField jtfTicket;
    private javax.swing.JTextField jtfVgm;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moDpsEntry = null;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }
    
    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        moDpsEntry = (SDataDpsEntry) registry;

        moFieldDriver.setFieldValue(moDpsEntry.getDriver());
        moFieldPlate.setFieldValue(moDpsEntry.getPlate());
        moFieldTicket.setFieldValue(moDpsEntry.getTicket());
        moFieldContainer.setFieldValue(moDpsEntry.getContainerTank());
        moFieldQualitySeal.setFieldValue(moDpsEntry.getSealQuality());
        moFieldSecuritySeal.setFieldValue(moDpsEntry.getSealSecurity());
        moFieldVgm.setFieldValue(moDpsEntry.getVgm());
    }
    
    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        if (moDpsEntry == null) {
            moDpsEntry = new SDataDpsEntry();
            moDpsEntry.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
        }
        else {
            moDpsEntry.setIsRegistryEdited(true);
            moDpsEntry.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
        }

        moDpsEntry.setDriver(moFieldDriver.getString());
        moDpsEntry.setPlate(moFieldPlate.getString());
        moDpsEntry.setTicket(moFieldTicket.getString());
        
        moDpsEntry.setContainerTank(moFieldContainer.getString());
        moDpsEntry.setSealQuality(moFieldQualitySeal.getString());
        moDpsEntry.setSealSecurity(moFieldSecuritySeal.getString());
        moDpsEntry.setVgm(moFieldVgm.getString());
        moDpsEntry.setIsRegistryEdited(true);

        return moDpsEntry;
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk1) {
                actionOk();
            }
            else if (button == jbCancel1) {
                actionCancel();
            }
        }
    }

/*************************************************************************************************/
    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void formRefreshCatalogues() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public SFormValidation formValidate() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setValue(int type, Object value) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public JLabel getTimeoutLabel() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
