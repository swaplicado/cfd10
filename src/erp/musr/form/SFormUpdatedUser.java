/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.musr.form;

import com.fasterxml.jackson.core.JsonProcessingException;
import erp.lib.SLibConstants;
import erp.lib.data.SDataRegistry;
import erp.lib.form.SFormField;
import erp.lib.form.SFormValidation;
import erp.mod.hrs.link.db.SConfigException;
import erp.mod.hrs.link.pub.SShareData;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author SW
 */
public class SFormUpdatedUser extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener{
    
    private erp.client.SClientInterface miClient;
    private erp.lib.form.SFormField moFieldDate;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private static FileWriter file;
    
    /**
     * Creates new form SFormUpdatedUser
     */
    public SFormUpdatedUser(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        initComponents();
        initComponentsExtra();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlDate = new javax.swing.JLabel();
        jftDate = new javax.swing.JFormattedTextField();
        jbDate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jbGet = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(320, 200));

        jPanel1.setPreferredSize(new java.awt.Dimension(250, 100));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(1, 1));

        jlDate.setText("Fecha de actualizaci√≥n:");
        jlDate.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel4.add(jlDate);

        jftDate.setText("dd/mm/yyyy");
        jftDate.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel4.add(jftDate);

        jbDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_cal.gif"))); // NOI18N
        jbDate.setToolTipText("Seleccionar fecha");
        jbDate.setFocusable(false);
        jbDate.setPreferredSize(new java.awt.Dimension(23, 23));
        jbDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDateActionPerformed(evt);
            }
        });
        jPanel4.add(jbDate);

        jPanel3.add(jPanel4);

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jbGet.setText("Obtener");
        jPanel5.add(jbGet);

        jbCancel.setText("Cerrar");
        jPanel5.add(jbCancel);

        jPanel2.add(jPanel5, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        setSize(new java.awt.Dimension(336, 239));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDateActionPerformed
        miClient.getGuiDatePickerXXX().pickDate(moFieldDate.getDate(), moFieldDate);
    }//GEN-LAST:event_jbDateActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbDate;
    private javax.swing.JButton jbGet;
    private javax.swing.JFormattedTextField jftDate;
    private javax.swing.JLabel jlDate;
    // End of variables declaration//GEN-END:variables

    private void initComponentsExtra(){
        moFieldDate = new SFormField(miClient, SLibConstants.DATA_TYPE_DATE, true, jftDate, jlDate);
        moFieldDate.setPickerButton(jbDate);
        
        moFieldDate.setFieldValue(miClient.getSessionXXX().getWorkingDate());
        
        mvFields = new Vector<SFormField>();
        mvFields.add(moFieldDate);
        
        jbGet.addActionListener(this);
        jbCancel.addActionListener(this);
    }
    
    public static String newjson() throws ParseException, SQLException, ClassNotFoundException, JsonProcessingException, SConfigException{
        SShareData sd = new SShareData();
        sd.setJsonConn("{\"dbHost\":\"192.168.1.233\",\"dbName\":\"erp\",\"dbPort\":\"3306\",\"dbUser\":\"root\",\"dbPass\":\"msroot\",\"dbMainId\":\"2852\"}");
        String res = null;
        res = sd.getSiieData("2010-01-01 00:00:00");
        return res;
    }
    
    private void actionGetUpdated() throws SQLException, Exception{
        String stringJson = newjson();
        JFileChooser j = new JFileChooser();
        j.setSelectedFile(new File("UpdateUsers.json"));
        int aprove_option = j.showSaveDialog(null);
        
        if (aprove_option == JFileChooser.APPROVE_OPTION) {
            try {
                //file = new FileWriter(System.getProperty("user.home") + "\\Documents\\" + "UpdateUsers.json");
                file = new FileWriter(j.getSelectedFile().getAbsolutePath());
                file.write(stringJson);
                System.out.println("JSON copiado a file exitosamente");

            } catch (IOException e) {
                e.printStackTrace();

            } finally {
                try {
                    file.flush();
                    file.close();
                    JOptionPane.showMessageDialog(this, "Se creo el archivo exitosamente");
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
    
    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void formReset() {
        
    }

    @Override
    public void formRefreshCatalogues() {
        
    }

    @Override
    public SFormValidation formValidate() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setFormStatus(int status) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int getFormResult() {
        return SLibConstants.FORM_RESULT_CANCEL;
    }

    @Override
    public void setRegistry(SDataRegistry registry) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public SDataRegistry getRegistry() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setValue(int type, Object value) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public JLabel getTimeoutLabel() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbGet) {
                try {
                    actionGetUpdated();
                } catch (SQLException ex) {
                    Logger.getLogger(SFormUpdatedUser.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(SFormUpdatedUser.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else if (button == jbCancel) {
                setVisible(false);
            }
        }
    }
}
