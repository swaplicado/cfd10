/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SDialogRepBizPartnerAuxMoves.java
 *
 * Created on 25/01/2012
 */

package erp.mfin.form;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.lib.SLibConstants;
import erp.lib.SLibTimeUtilities;
import erp.lib.SLibUtilities;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.mbps.data.SDataBizPartner;
import erp.mfin.data.SDataAccount;
import erp.mod.bps.db.SBpsUtils;
import java.awt.BorderLayout;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.Map;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.JCheckBox;
import javax.swing.JFormattedTextField;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import sa.gui.util.SUtilConsts;

/**
 *
 * @author Juan Barajas
 */
public class SDialogRepBizPartnerJournal extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.ItemListener  {

    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.lib.form.SFormField moFieldDateInitial;
    private erp.lib.form.SFormField moFieldDateEnd;
    private erp.lib.form.SFormField moFieldBizPartner;

    private int mnBizPartnerCategory;
    private int mnOptionPickerId;
    private String msBizPartnerKey;
    private String msBizPartnerCatSng;
    private String msBizPartnerCatPlr;
    private java.lang.String msCurrentFkAccountId;
    private int mnFidCtSysMov;
    private int mnFidTpSysMov;

    private erp.mfin.form.SPanelAccount moPanelFkAccountId;

    /** Creates new form SDialogRepBizPartnerAuxMoves */
    public SDialogRepBizPartnerJournal(erp.client.SClientInterface client, int idBizPartnerCategory) {
        super(client.getFrame(), true);
        miClient = client;
        mnBizPartnerCategory = idBizPartnerCategory;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbPrint = new javax.swing.JButton();
        jbClose = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jpFilter = new javax.swing.JPanel();
        jpAccount = new javax.swing.JPanel();
        jlDummyAccount = new javax.swing.JLabel();
        jckIsAccount = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jlBizPartner = new javax.swing.JLabel();
        jcbBizPartner = new javax.swing.JComboBox();
        jbBizPartner = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlDateInitial = new javax.swing.JLabel();
        jftDateInitial = new javax.swing.JFormattedTextField();
        jbDateInitial = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jlDateEnd = new javax.swing.JLabel();
        jftDateEnd = new javax.swing.JFormattedTextField();
        jbDateEnd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(392, 33));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbPrint.setText("Imprimir");
        jbPrint.setToolTipText("[Ctrl + Enter]");
        jbPrint.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbPrint);

        jbClose.setText("Cerrar");
        jbClose.setToolTipText("[Escape]");
        jbClose.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbClose);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuración del reporte:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jpFilter.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtros del reporte:"));
        jpFilter.setPreferredSize(new java.awt.Dimension(405, 170));
        jpFilter.setLayout(new java.awt.BorderLayout());

        jpAccount.setPreferredSize(new java.awt.Dimension(130, 80));
        jpAccount.setLayout(new java.awt.BorderLayout());

        jlDummyAccount.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlDummyAccount.setText("[Panel cuenta contable]");
        jlDummyAccount.setPreferredSize(new java.awt.Dimension(130, 23));
        jpAccount.add(jlDummyAccount, java.awt.BorderLayout.CENTER);

        jckIsAccount.setText("Cta. contable");
        jckIsAccount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jpAccount.add(jckIsAccount, java.awt.BorderLayout.NORTH);

        jpFilter.add(jpAccount, java.awt.BorderLayout.NORTH);

        jPanel6.setPreferredSize(new java.awt.Dimension(135, 50));
        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));

        jlBizPartner.setText("Asociado negocios: *");
        jlBizPartner.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel6.add(jlBizPartner);

        jcbBizPartner.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbBizPartner.setPreferredSize(new java.awt.Dimension(265, 23));
        jcbBizPartner.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbBizPartnerItemStateChanged(evt);
            }
        });
        jPanel6.add(jcbBizPartner);

        jbBizPartner.setText("jButton1");
        jbBizPartner.setToolTipText("Seleccionar asociado de negocios");
        jbBizPartner.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel6.add(jbBizPartner);

        jpFilter.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel2.add(jpFilter, java.awt.BorderLayout.CENTER);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Período:"));
        jPanel10.setPreferredSize(new java.awt.Dimension(100, 77));
        jPanel10.setLayout(new java.awt.GridLayout(2, 1, 0, 1));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlDateInitial.setText("Fecha inicial: *");
        jlDateInitial.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlDateInitial);

        jftDateInitial.setText("dd/mm/yyyy");
        jftDateInitial.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel4.add(jftDateInitial);

        jbDateInitial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_date_day.gif"))); // NOI18N
        jbDateInitial.setToolTipText("Seleccionar fecha inicial");
        jbDateInitial.setFocusable(false);
        jbDateInitial.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel4.add(jbDateInitial);

        jPanel10.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlDateEnd.setText("Fecha final: *");
        jlDateEnd.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlDateEnd);

        jftDateEnd.setText("dd/mm/yyyy");
        jftDateEnd.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel5.add(jftDateEnd);

        jbDateEnd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_date_day.gif"))); // NOI18N
        jbDateEnd.setToolTipText("Seleccionar fecha final");
        jbDateEnd.setFocusable(false);
        jbDateEnd.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel5.add(jbDateEnd);

        jPanel10.add(jPanel5);

        jPanel2.add(jPanel10, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        setSize(new java.awt.Dimension(484, 333));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void jcbBizPartnerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbBizPartnerItemStateChanged
        if (!mbResetingForm) {
        }
    }//GEN-LAST:event_jcbBizPartnerItemStateChanged

    @SuppressWarnings("unchecked")
    private void initComponentsExtra() {
        mvFields = new Vector<>();

        try {
            moPanelFkAccountId = new SPanelAccount(miClient, SDataConstants.FIN_ACC, false, false, false);
        }
        catch (Exception e) {
            SLibUtilities.renderException(this, e);
        }

        jpAccount.remove(jlDummyAccount);
        jpAccount.add(moPanelFkAccountId, BorderLayout.CENTER);

        msBizPartnerCatSng = SBpsUtils.getBizPartnerCategoryName(mnBizPartnerCategory, SUtilConsts.NUM_SNG);
        msBizPartnerCatPlr = SBpsUtils.getBizPartnerCategoryName(mnBizPartnerCategory, SUtilConsts.NUM_PLR);
        jlBizPartner.setText(msBizPartnerCatSng + ": *");
        setTitle("Reporte de auxiliares contables de " + msBizPartnerCatPlr.toLowerCase());
        
        switch(mnBizPartnerCategory) {
            case SDataConstantsSys.BPSS_CT_BP_CUS:
                mnFidCtSysMov = SDataConstantsSys.FINS_CT_SYS_MOV_BPS;
                mnFidTpSysMov = SDataConstantsSys.BPSS_CT_BP_CUS;
                SFormUtilities.populateComboBox(miClient, jcbBizPartner, mnOptionPickerId = SDataConstants.BPSX_BP_CUS);
                break;
            case SDataConstantsSys.BPSS_CT_BP_SUP:
                mnFidCtSysMov = SDataConstantsSys.FINS_CT_SYS_MOV_BPS;
                mnFidTpSysMov = SDataConstantsSys.BPSS_CT_BP_SUP;
                SFormUtilities.populateComboBox(miClient, jcbBizPartner, mnOptionPickerId = SDataConstants.BPSX_BP_SUP);
                break;
            case SDataConstantsSys.BPSS_CT_BP_DBR:
                mnFidCtSysMov = SDataConstantsSys.FINS_CT_SYS_MOV_BPS;
                mnFidTpSysMov = SDataConstantsSys.BPSS_CT_BP_DBR;
                SFormUtilities.populateComboBox(miClient, jcbBizPartner, mnOptionPickerId = SDataConstants.BPSX_BP_DBR);
                break;
            case SDataConstantsSys.BPSS_CT_BP_CDR:
                mnFidCtSysMov = SDataConstantsSys.FINS_CT_SYS_MOV_BPS;
                mnFidTpSysMov = SDataConstantsSys.BPSS_CT_BP_CDR;
                SFormUtilities.populateComboBox(miClient, jcbBizPartner, mnOptionPickerId = SDataConstants.BPSX_BP_CDR);
                break;
            default:
        }

        moFieldDateInitial = new SFormField(miClient, SLibConstants.DATA_TYPE_DATE, true, jftDateInitial, jlDateInitial);
        moFieldDateInitial.setPickerButton(jbDateInitial);
        moFieldDateEnd = new SFormField(miClient, SLibConstants.DATA_TYPE_DATE, true, jftDateEnd, jlDateEnd);
        moFieldDateEnd.setPickerButton(jbDateEnd);
        moFieldBizPartner = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbBizPartner, jlBizPartner);
        moFieldBizPartner.setPickerButton(jbBizPartner);

        mvFields.add(moFieldDateInitial);
        mvFields.add(moFieldDateEnd);
        mvFields.add(moFieldBizPartner);

        jbPrint.addActionListener(this);
        jbClose.addActionListener(this);
        jbDateInitial.addActionListener(this);
        jbDateEnd.addActionListener(this);
        jbBizPartner.addActionListener(this);
        jckIsAccount.addItemListener(this);

        moPanelFkAccountId.getFieldAccount().getComponent().addFocusListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionPrint(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "print", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionClose(); }
        };

        SFormUtilities.putActionMap(getRootPane(), action, "close", KeyEvent.VK_ESCAPE, 0);

        formReset();
        actionIsAccount();
        setModalityType(ModalityType.MODELESS);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
            jftDateInitial.requestFocus();
        }
    }

    private void actionPrint() {
        Cursor cursor = getCursor();
        SDataBizPartner bizPartner = null;
        SFormValidation validation = formValidate();
        Map<String, Object> map = null;
        JasperPrint jasperPrint = null;
        JasperViewer jasperViewer = null;

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            try {
                setCursor(new Cursor(Cursor.WAIT_CURSOR));

                bizPartner = (SDataBizPartner) SDataUtilities.readRegistry(miClient, SDataConstants.BPSU_BP, moFieldBizPartner.getKeyAsIntArray(), SLibConstants.EXEC_MODE_VERBOSE);

                switch(mnBizPartnerCategory) {
                    case SDataConstantsSys.BPSS_CT_BP_CUS:
                        msBizPartnerKey = bizPartner.getDbmsCategorySettingsCus().getKey();
                        break;
                     case SDataConstantsSys.BPSS_CT_BP_SUP:
                         msBizPartnerKey = bizPartner.getDbmsCategorySettingsSup().getKey();
                         break;
                     case SDataConstantsSys.BPSS_CT_BP_DBR:
                         msBizPartnerKey = bizPartner.getDbmsCategorySettingsDbr().getKey();
                         break;
                     case SDataConstantsSys.BPSS_CT_BP_CDR:
                         msBizPartnerKey = bizPartner.getDbmsCategorySettingsCdr().getKey();
                         break;

                     default:
                 }

                map = miClient.createReportParams();
                map.put("tDtInitial", moFieldDateInitial.getDate());
                map.put("tDtEnd", moFieldDateEnd.getDate());
                map.put("nFidCtSysMov", mnFidCtSysMov);
                map.put("nFidTpSysMov", mnFidTpSysMov);
                map.put("sAccountId", jckIsAccount.isSelected() ? moPanelFkAccountId.getFieldAccount().getString() : "(TODAS)");
                map.put("sWhereAccount", jckIsAccount.isSelected() ? "AND re.fid_acc = '" + moPanelFkAccountId.getFieldAccount().getString() + "' " : "");
                map.put("dOldBalance", readOldBalance(bizPartner.getPkBizPartnerId()));
                map.put("nBizPartnerId", bizPartner.getPkBizPartnerId());
                map.put("sBizPartner", bizPartner.getBizPartner());
                map.put("sBizPartnerKey", msBizPartnerKey);
                map.put("sBizPartnerCat", msBizPartnerCatSng.toUpperCase());
                map.put("sBizPartnerCatPlural", msBizPartnerCatPlr.toUpperCase());

                jasperPrint = SDataUtilities.fillReport(miClient, SDataConstantsSys.REP_FIN_AUX_MOV_BPS, map);
                jasperViewer = new JasperViewer(jasperPrint, false);
                jasperViewer.setTitle(getTitle());
                jasperViewer.setVisible(true);
            }
            catch(Exception e) {
                SLibUtilities.renderException(this, e);
            }
            finally {
                setCursor(cursor);
            }
        }
    }

    @SuppressWarnings("unchecked")
    private double readOldBalance(int nBizPartnerId) {
        double dOldBalance = 0;
        String sql = "";
        ResultSet resulSet = null;

        try {
            sql = "SELECT SUM(IF(r.dt < '" + miClient.getSessionXXX().getFormatters().getDbmsDatetimeFormat().format(moFieldDateInitial.getDate()) + "', re.debit - re.credit, 0)) AS gBalance " +
                    "FROM fin_rec AS r " +
                    "INNER JOIN fin_rec_ety AS re ON r.id_year = re.id_year AND r.id_per = re.id_per AND r.id_bkc = re.id_bkc " +
                    "AND r.id_tp_rec = re.id_tp_rec AND r.id_num = re.id_num AND " +
                    "r.id_year = YEAR('" + miClient.getSessionXXX().getFormatters().getDbmsDatetimeFormat().format(moFieldDateInitial.getDate()) + "') AND r.b_del = 0 AND re.b_del = 0 AND re.fid_bp_nr = " + nBizPartnerId +  " AND " +
                    "re.fid_ct_sys_mov_xxx = " + mnFidCtSysMov + " AND re.fid_tp_sys_mov_xxx = " + mnFidTpSysMov + (jckIsAccount.isSelected() ? " AND re.fid_acc = '" + moPanelFkAccountId.getFieldAccount().getString() + "'" : "");

            resulSet = miClient.getSession().getStatement().executeQuery(sql);
            while (resulSet.next()) {
                dOldBalance = resulSet.getDouble("gBalance");
            }
        }
        catch (Exception e) {
            SLibUtilities.renderException(this, e);
        }

        return dOldBalance;
    }

    private void actionClose() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    private void actionDateInitial() {
        miClient.getGuiDatePickerXXX().formReset();
        miClient.getGuiDatePickerXXX().setDate(moFieldDateInitial.getDate());
        miClient.getGuiDatePickerXXX().setVisible(true);

        if (miClient.getGuiDatePickerXXX().getFormResult() == SLibConstants.FORM_RESULT_OK) {
            moFieldDateInitial.setFieldValue(miClient.getGuiDatePickerXXX().getGuiDate());
            jftDateInitial.requestFocus();
        }
    }

    private void actionDateEnd() {
        miClient.getGuiDatePickerXXX().formReset();
        miClient.getGuiDatePickerXXX().setDate(moFieldDateEnd.getDate());
        miClient.getGuiDatePickerXXX().setVisible(true);

        if (miClient.getGuiDatePickerXXX().getFormResult() == SLibConstants.FORM_RESULT_OK) {
            moFieldDateEnd.setFieldValue(miClient.getGuiDatePickerXXX().getGuiDate());
            jftDateEnd.requestFocus();
        }
    }

    private void actionIsAccount() {
        if (jckIsAccount.isSelected()) {
            moPanelFkAccountId.enableFields(true);
            moPanelFkAccountId.resetPanel();
        }
        else {
            moPanelFkAccountId.enableFields(false);
            moPanelFkAccountId.resetPanel();
        }
    }

    private void renderAccountSettings() {
        SDataAccount oAccountMajor = null;

        if (!moPanelFkAccountId.isEmptyAccountId()) {
            oAccountMajor = moPanelFkAccountId.getDataAccountMajor();
        }
    }

    private void actionFkAccountIdFocusGained() {
        if (msCurrentFkAccountId.compareTo(moPanelFkAccountId.getFieldAccount().getString()) != 0) {
            renderAccountSettings();
        }

        msCurrentFkAccountId = moPanelFkAccountId.getFieldAccount().getString();
    }

    private void actionFkAccountIdFocusLost() {
        if (msCurrentFkAccountId.compareTo(moPanelFkAccountId.getFieldAccount().getString()) != 0) {
            renderAccountSettings();
        }
    }

    private void actionBizPartner() {
        miClient.pickOption(mnOptionPickerId, moFieldBizPartner, null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton jbBizPartner;
    private javax.swing.JButton jbClose;
    private javax.swing.JButton jbDateEnd;
    private javax.swing.JButton jbDateInitial;
    private javax.swing.JButton jbPrint;
    private javax.swing.JComboBox jcbBizPartner;
    private javax.swing.JCheckBox jckIsAccount;
    private javax.swing.JFormattedTextField jftDateEnd;
    private javax.swing.JFormattedTextField jftDateInitial;
    private javax.swing.JLabel jlBizPartner;
    private javax.swing.JLabel jlDateEnd;
    private javax.swing.JLabel jlDateInitial;
    private javax.swing.JLabel jlDummyAccount;
    private javax.swing.JPanel jpAccount;
    private javax.swing.JPanel jpFilter;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        moPanelFkAccountId.resetPanel();
        msCurrentFkAccountId = "";
        jckIsAccount.setSelected(false);

        moFieldDateInitial.setFieldValue(SLibTimeUtilities.getBeginOfMonth(miClient.getSessionXXX().getWorkingDate()));
        moFieldDateEnd.setFieldValue(SLibTimeUtilities.getEndOfMonth(miClient.getSessionXXX().getWorkingDate()));
        mbResetingForm = false;
    }

    @Override
    public void formRefreshCatalogues() {
        mbResetingForm = true;

    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        String message = "";
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        if (!validation.getIsError()) {
            if (moFieldDateEnd.getDate().compareTo(moFieldDateInitial.getDate()) < 0) {
                validation.setMessage("La fecha final debe ser mayor o igual a la fecha inicial.");
                validation.setComponent(jftDateEnd);
            }
        }

        if (!validation.getIsError() && jckIsAccount.isSelected()) {
            message = SDataUtilities.validateAccount(miClient, moPanelFkAccountId.getCurrentInputAccount(), moFieldDateInitial.getDate());

            if (message.length() > 0) {
                validation.setMessage(message);
                validation.setComponent(moPanelFkAccountId.getFieldAccount().getComponent());
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbPrint) {
                actionPrint();
            }
            else if (button == jbClose) {
                actionClose();
            }
            else if (button == jbDateInitial) {
                actionDateInitial();
            }
            else if (button == jbDateEnd) {
                actionDateEnd();
            }
            else if (button == jbBizPartner) {
                actionBizPartner();
            }
        }
    }

    public void setBizPartnerCategory(int n) { mnBizPartnerCategory = n; }

    @Override
    public void focusGained(FocusEvent e) {
        if (e.getSource() instanceof javax.swing.JFormattedTextField) {
            JFormattedTextField formattedTextField = (JFormattedTextField) e.getSource();

            if (formattedTextField == moPanelFkAccountId.getFieldAccount().getComponent()) {
                actionFkAccountIdFocusGained();
            }
        }
    }

    @Override
    public void focusLost(FocusEvent e) {
        if (e.getSource() instanceof javax.swing.JFormattedTextField) {
            JFormattedTextField formattedTextField = (JFormattedTextField) e.getSource();

            if (formattedTextField == moPanelFkAccountId.getFieldAccount().getComponent()) {
                actionFkAccountIdFocusLost();
            }
        }
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() instanceof JCheckBox) {
            JCheckBox checkBox = (JCheckBox) e.getSource();

            if (checkBox == jckIsAccount) {
                actionIsAccount();
            }
        }
    }
}
