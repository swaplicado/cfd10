/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SFormTaxBasic.java
 *
 * Created on 19/10/2009, 03:37:43 PM
 */

package erp.mfin.form;

import erp.data.SDataConstants;
import erp.lib.SLibConstants;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.lib.table.STableColumnForm;
import erp.lib.table.STableConstants;
import erp.lib.table.STablePane;
import erp.mfin.data.SDataTax;
import erp.mfin.data.SDataTaxBasic;
import erp.mfin.data.SDataTaxRow;
import erp.mod.SModConsts;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.AbstractAction;
import sa.lib.SLibConsts;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiUtils;

/**
 *
 * @author Sergio Flores, Alfonso Flores, Juan Barajas, Sergio Flores
 */
public class SFormTaxBasic extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mfin.data.SDataTaxBasic moTaxBasic;
    private erp.lib.form.SFormField moFieldTaxBasic;
    private erp.lib.form.SFormField moFieldFkCfdTaxId;
    private erp.lib.form.SFormField moFieldIsDeleted;

    private erp.lib.table.STablePane moTaxesPane;

    /** Creates new form SFormTaxBasic */
    public SFormTaxBasic(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient =  client;
        mnFormType = SDataConstants.FINU_TAX_BAS;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlTaxBasic = new javax.swing.JLabel();
        jtfTaxBasic = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jlFkCfdTaxId = new javax.swing.JLabel();
        moKeyCfdTaxId = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel6 = new javax.swing.JPanel();
        jlDummy = new javax.swing.JLabel();
        jckIsDeleted = new javax.swing.JCheckBox();
        jpTaxes = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jbAdd = new javax.swing.JButton();
        jbModify = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Impuesto básico");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(392, 33));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jPanel1.add(jbCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanel2.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel3.setLayout(new java.awt.GridLayout(3, 1, 5, 3));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTaxBasic.setText("Impuesto básico: *");
        jlTaxBasic.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel4.add(jlTaxBasic);

        jtfTaxBasic.setText("IMP BASE");
        jtfTaxBasic.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel4.add(jtfTaxBasic);

        jPanel3.add(jPanel4);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkCfdTaxId.setText("Impuesto SAT: *");
        jlFkCfdTaxId.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel7.add(jlFkCfdTaxId);

        moKeyCfdTaxId.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel7.add(moKeyCfdTaxId);

        jPanel3.add(jPanel7);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDummy.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel6.add(jlDummy);

        jckIsDeleted.setText("Registro eliminado");
        jckIsDeleted.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel6.add(jckIsDeleted);

        jPanel3.add(jPanel6);

        jPanel2.add(jPanel3, java.awt.BorderLayout.NORTH);

        jpTaxes.setBorder(javax.swing.BorderFactory.createTitledBorder("Impuestos:"));
        jpTaxes.setLayout(new java.awt.BorderLayout());

        jPanel5.setPreferredSize(new java.awt.Dimension(476, 23));
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 1, 0));

        jbAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_new.gif"))); // NOI18N
        jbAdd.setToolTipText("Crear");
        jbAdd.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel5.add(jbAdd);

        jbModify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_edit.gif"))); // NOI18N
        jbModify.setToolTipText("Modificar");
        jbModify.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel5.add(jbModify);

        jpTaxes.add(jPanel5, java.awt.BorderLayout.NORTH);

        jPanel2.add(jpTaxes, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(900, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void initComponentsExtra() {
        int i = 0;
        erp.lib.table.STableColumnForm tableColumnsTaxes[];

        moTaxesPane = new STablePane(miClient);
        moTaxesPane.setDoubleClickAction(this, "publicActionModifyTax");
        jpTaxes.add(moTaxesPane, BorderLayout.CENTER);

        moFieldTaxBasic = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfTaxBasic, jlTaxBasic);
        moFieldTaxBasic.setLengthMax(50);
        moFieldFkCfdTaxId = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, moKeyCfdTaxId.getComponent(), jlFkCfdTaxId);
        moKeyCfdTaxId.setKeySettings((SGuiClient) miClient, SGuiUtils.getLabelName(jlFkCfdTaxId.getText()), true);
        moFieldIsDeleted = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDeleted);

        mvFields = new Vector<>();
        mvFields.add(moFieldTaxBasic);
        mvFields.add(moFieldFkCfdTaxId);
        mvFields.add(moFieldIsDeleted);

        i = 0;
        tableColumnsTaxes = new STableColumnForm[15];
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Impuesto", 150);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo impuesto", 100);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo cálculo", 100);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo aplicación", 100);
        tableColumnsTaxes[i] = new STableColumnForm(SLibConstants.DATA_TYPE_DOUBLE, "Tasa", STableConstants.WIDTH_PERCENTAGE);
        tableColumnsTaxes[i++].setCellRenderer(miClient.getSessionXXX().getFormatters().getTableCellRendererPercentage());
        tableColumnsTaxes[i] = new STableColumnForm(SLibConstants.DATA_TYPE_DOUBLE, "Monto fijo u. $", STableConstants.WIDTH_VALUE_UNITARY);
        tableColumnsTaxes[i++].setCellRenderer(miClient.getSessionXXX().getFormatters().getTableCellRendererValueUnitary());
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DOUBLE, "Monto fijo $", STableConstants.WIDTH_VALUE);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Tipo IVA", 100);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_BOOLEAN, "Eliminado", STableConstants.WIDTH_BOOLEAN);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. creación", STableConstants.WIDTH_USER);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Creación", STableConstants.WIDTH_DATE_TIME);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. modificación", STableConstants.WIDTH_USER);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Modificación", STableConstants.WIDTH_DATE_TIME);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_STRING, "Usr. eliminación", STableConstants.WIDTH_USER);
        tableColumnsTaxes[i++] = new STableColumnForm(SLibConstants.DATA_TYPE_DATE_TIME, "Eliminación", STableConstants.WIDTH_DATE_TIME);

        for (i = 0; i < tableColumnsTaxes.length; i++) {
            moTaxesPane.addTableColumn(tableColumnsTaxes[i]);
        }

        jbOk.addActionListener(this);
        jbCancel.addActionListener(this);
        jbAdd.addActionListener(this);
        jbModify.addActionListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction actionCancel = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionCancel, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
            jtfTaxBasic.requestFocus();
        }
    }

    private void actionOk() {
        SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    private void actionAddTax() {
        int index = 0;

        SFormTax formTax = new SFormTax(miClient);
        SDataTax dataTax = null;
        SDataTaxRow dataTaxRow = null;

        formTax.formRefreshCatalogues();
        formTax.formReset();
        formTax.setVisible(true);
        if (formTax.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
            dataTax = (SDataTax) formTax.getRegistry();
            dataTax.setDbmsUserNew(miClient.getSessionXXX().getUser().getUser());
            dataTax.setDbmsUserEdit("(n/a)");
            dataTax.setDbmsUserDelete("(n/a)");
            dataTax.setUserNewTs(miClient.getSessionXXX().getSystemDate());
            dataTax.setUserEditTs(miClient.getSessionXXX().getSystemDate());
            dataTax.setUserDeleteTs(miClient.getSessionXXX().getSystemDate());
            dataTaxRow = new SDataTaxRow(dataTax);

            moTaxesPane.addTableRow(dataTaxRow);
            moTaxesPane.renderTableRows();
            index = moTaxesPane.getTableGuiRowCount() - 1;
            moTaxesPane.setTableRowSelection(index);
        }
    }

    private void actionModifyTax() {
        int index = moTaxesPane.getTable().getSelectedRow();
        SFormTax formTax = new SFormTax(miClient);
        SDataTax dataTax = null;
        SDataTaxRow dataTaxRow = null;

        formTax.formRefreshCatalogues();
        formTax.formReset();
        if (index != -1) {
            dataTax = (SDataTax) moTaxesPane.getTableRow(index).getData();
            formTax.setRegistry(dataTax);
            formTax.setVisible(true);
            if (formTax.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
                dataTax = (SDataTax) formTax.getRegistry();
                dataTaxRow = new SDataTaxRow(dataTax);

                moTaxesPane.getTableModel().getTableRows().set(index, dataTaxRow);
                moTaxesPane.renderTableRows();
                moTaxesPane.setTableRowSelection(index);
            }
        }
    }

    public void publicActionModifyTax() {
        actionModifyTax();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JButton jbAdd;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbModify;
    private javax.swing.JButton jbOk;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JLabel jlDummy;
    private javax.swing.JLabel jlFkCfdTaxId;
    private javax.swing.JLabel jlTaxBasic;
    private javax.swing.JPanel jpTaxes;
    private javax.swing.JTextField jtfTaxBasic;
    private sa.lib.gui.bean.SBeanFieldKey moKeyCfdTaxId;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moTaxBasic = null;
        moTaxesPane.createTable();
        moTaxesPane.clearTableRows();

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        jckIsDeleted.setEnabled(false);
    }

    @Override
    public void formRefreshCatalogues() {
        miClient.getSession().populateCatalogue(moKeyCfdTaxId, SModConsts.FINS_CFD_TAX, SLibConsts.UNDEFINED, null);
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        int i = 0;
        moTaxBasic = (SDataTaxBasic) registry;
        SDataTaxRow taxesRow = null;

        moFieldTaxBasic.setFieldValue(moTaxBasic.getTaxBasic());
        moKeyCfdTaxId.setValue(new int[] { moTaxBasic.getFkCfdTaxId() });
        moFieldIsDeleted.setFieldValue(moTaxBasic.getIsDeleted());

        for (i = 0; i < moTaxBasic.getDbmsTaxes().size(); i++) {
            if (!moTaxBasic.getDbmsTaxes().get(i).getIsDeleted()) {
                taxesRow = new SDataTaxRow(moTaxBasic.getDbmsTaxes().get(i));
                moTaxesPane.addTableRow(taxesRow);
            }
        }

        jckIsDeleted.setEnabled(true);
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        if (moTaxBasic == null) {
            moTaxBasic = new SDataTaxBasic();
            moTaxBasic.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
        }
        else {
            moTaxBasic.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
        }

        moTaxBasic.setTaxBasic(moFieldTaxBasic.getString());
        moTaxBasic.setFkCfdTaxId(moKeyCfdTaxId.getValue()[0]);
        moTaxBasic.setIsDeleted(moFieldIsDeleted.getBoolean());

        moTaxBasic.getDbmsTaxes().clear();
        for (int i = 0; i < moTaxesPane.getTableGuiRowCount(); i++) {
            moTaxBasic.getDbmsTaxes().add((erp.mfin.data.SDataTax) moTaxesPane.getTableRow(i).getData());
        }

        return moTaxBasic;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
            else if (button == jbAdd) {
                actionAddTax();
            }
            else if (button == jbModify) {
                actionModifyTax();
            }
        }
    }
}
