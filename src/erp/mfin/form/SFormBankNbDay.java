/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mfin.form;

import erp.lib.SLibConstants;
import erp.lib.data.SDataRegistry;
import erp.lib.form.SFormField;
import erp.lib.form.SFormValidation;
import erp.mfin.data.SDataBankNbDay;
import java.awt.event.ActionEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SW
 */
public class SFormBankNbDay extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener{

    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
    private erp.lib.form.SFormField moFieldDate;
    private erp.client.SClientInterface miClient;
    private ArrayList maBankNbDays = new ArrayList();
    private erp.mfin.data.SDataBankNbDay moBankNbDay;
    private int mnFormResult;
    
    
    DefaultTableModel model = new DefaultTableModel();
    
    public SFormBankNbDay(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        initComponents();
        initComponentsExtra();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCalendar = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jlDate = new javax.swing.JLabel();
        jftDate = new javax.swing.JFormattedTextField();
        jbDate = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jlCelebration = new javax.swing.JLabel();
        jtCelebration = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jbAdd = new javax.swing.JButton();
        jbEdit = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jckIsDeleted = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jbSave = new javax.swing.JButton();
        jbClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(360, 360));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(360, 370));
        jPanel3.setLayout(new java.awt.GridLayout(1, 1));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(340, 360));

        jTableCalendar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableCalendar);

        jPanel4.add(jScrollPane1);

        jPanel3.add(jPanel4);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel5.setPreferredSize(new java.awt.Dimension(280, 360));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel6.setPreferredSize(new java.awt.Dimension(129, 200));
        jPanel6.setLayout(new java.awt.GridLayout(4, 1));

        jlDate.setText("Fecha");
        jPanel7.add(jlDate);

        jftDate.setText("yyyy/mm/dd");
        jftDate.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel7.add(jftDate);

        jbDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_cal.gif"))); // NOI18N
        jbDate.setToolTipText("Seleccionar fecha");
        jbDate.setFocusable(false);
        jbDate.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel7.add(jbDate);

        jPanel6.add(jPanel7);

        jlCelebration.setText("Celebación");
        jPanel8.add(jlCelebration);

        jtCelebration.setPreferredSize(new java.awt.Dimension(190, 30));
        jPanel8.add(jtCelebration);

        jPanel6.add(jPanel8);

        jbAdd.setText("Añadir");
        jPanel9.add(jbAdd);

        jbEdit.setText("Editar");
        jPanel9.add(jbEdit);

        jPanel6.add(jPanel9);

        jckIsDeleted.setText("Registro eliminado");
        jPanel12.add(jckIsDeleted);

        jPanel6.add(jPanel12);

        jPanel5.add(jPanel6, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel5, java.awt.BorderLayout.EAST);

        jPanel2.setPreferredSize(new java.awt.Dimension(640, 40));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel10.setPreferredSize(new java.awt.Dimension(200, 10));

        jbSave.setText("Guardar");
        jPanel10.add(jbSave);

        jbClose.setText("Cerrar");
        jPanel10.add(jbClose);

        jPanel2.add(jPanel10, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        setSize(new java.awt.Dimension(640, 400));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCalendar;
    private javax.swing.JButton jbAdd;
    private javax.swing.JButton jbClose;
    private javax.swing.JButton jbDate;
    private javax.swing.JButton jbEdit;
    private javax.swing.JButton jbSave;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JFormattedTextField jftDate;
    private javax.swing.JLabel jlCelebration;
    private javax.swing.JLabel jlDate;
    private javax.swing.JTextField jtCelebration;
    // End of variables declaration//GEN-END:variables

    public void initComponentsExtra(){
        moFieldDate = new SFormField(miClient, SLibConstants.DATA_TYPE_DATE, true, jftDate, jlDate);
        moFieldDate.setPickerButton(jbDate);
        jtCelebration.setEditable(true);
        jbDate.addActionListener(this);
        jbAdd.addActionListener(this);
        jbEdit.addActionListener(this);
        jckIsDeleted.addActionListener(this);
        jbSave.addActionListener(this);
        jbClose.addActionListener(this);
        
        jbDate.setEnabled(true);
        jbAdd.setEnabled(true);
        jbEdit.setEnabled(false);
        jckIsDeleted.setEnabled(false);
        setTable();
    }
    
    private void setTable(){
        model = new DefaultTableModel();
        
        jTableCalendar.setModel(model);
        
        model.addColumn("Fecha");
        model.addColumn("Nombre");

        int[] anchosSessions = {100, 250};
        for (int i = 0; i < jTableCalendar.getColumnCount(); i++) {
            jTableCalendar.getColumnModel().getColumn(i).setPreferredWidth(anchosSessions[i]);
            jTableCalendar.getColumnModel().getClass();
        }
    }
    
    private void actionDate() {
        miClient.getGuiDatePickerXXX().pickDate(moFieldDate.getDate(), moFieldDate);
        jtCelebration.setText(null);
    }
    
    private void actionAdd(){
        String date = formatter.format(moFieldDate.getDate());
        String celebration = jtCelebration.getText();
        String[] row = {date,celebration};
        model.addRow(row);
    }
    
    private void actionEdit(){
        String date = formatter.format(moFieldDate.getDate());
        String celebration = jtCelebration.getText();
        String[] row = {date,celebration};
        model.removeRow(0);
        model.insertRow(0, row);
    }
    
    private void actionSave(){
        mnFormResult = SLibConstants.FORM_RESULT_OK;
        for(int i = 0; i<model.getRowCount(); i++){
            String[] row = {model.getValueAt(i, 0).toString(),model.getValueAt(i, 1).toString()};
            maBankNbDays.add(row);
        }
        setVisible(false);
    }
    
    private void actionDel(){
        
    }
    
    private void actionCancel(){
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }
    
    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void formReset() {
        jtCelebration.setText(null);
        moFieldDate.setDate(null);
        maBankNbDays = new ArrayList();
        moBankNbDay = null;
        jbAdd.setEnabled(true);
        jbEdit.setEnabled(false);
        jckIsDeleted.setSelected(false);
        jckIsDeleted.setEnabled(false);
        setTable();
    }

    @Override
    public void formRefreshCatalogues() {
        
    }

    @Override
    public SFormValidation formValidate() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setFormStatus(int status) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(true);
    }

    @Override
    public int getFormStatus() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(SDataRegistry registry) {
        moBankNbDay = (SDataBankNbDay) registry;
        //maBankNbDays = moBankNbDay.getBankNbDay();
        //Object bankNbDay = maBankNbDays.get(0);
        Object bankNbDay = moBankNbDay.getBankNbDay().get(0);
        if (bankNbDay instanceof String[]) {
            try {
                String dateFlatten = (((String[]) bankNbDay)[0]);
                String name = (((String[]) bankNbDay)[1]);
                Date date = formatter.parse(dateFlatten);
                moFieldDate.setDate(date);
                jtCelebration.setText(name);
                actionAdd();
                jbAdd.setEnabled(false);
                jbEdit.setEnabled(true);
                jckIsDeleted.setEnabled(true);
            } catch (ParseException ex) {
                Logger.getLogger(SFormBankNbDay.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    @Override
    public erp.mfin.data.SDataBankNbDay getRegistry() {
        if (moBankNbDay == null) {
            moBankNbDay = new SDataBankNbDay();
            moBankNbDay.setBankNbDay(maBankNbDays);
            moBankNbDay.setFkUserId(miClient.getSessionXXX().getUser().getPkUserId());
            moBankNbDay.setIsDeleted(jckIsDeleted.isSelected());
        }
        else {
            moBankNbDay.setIsDeleted(jckIsDeleted.isSelected());
            moBankNbDay.setBankNbDay(maBankNbDays);
            moBankNbDay.setFkUserId(miClient.getSession().getUser().getPkUserId());
        }

        return moBankNbDay;
    }

    @Override
    public void setValue(int type, Object value) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbDate) {
                actionDate();
            }else if (button == jbAdd) {
                actionAdd();
            }else if (button == jbEdit) {
                actionEdit();
            }else if (button == jbSave) {
                actionSave();
            }else if (button == jbClose) {
                actionCancel();
            }
        }
    }
}
