/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 *
 * Created on 10/11/2009
 */

package erp.mmfg.form;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.AbstractAction;

import erp.data.SDataConstants;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.lib.SLibConstants;
import erp.mmfg.data.SDataRequisitionEntry;

/**
 *
 * @author Néstor Ávalos
 */
public class SFormRequisitionEntry extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mmfg.data.SDataRequisitionEntry moRequisitionEntry;
    private erp.lib.form.SFormField moFieldDbmsItem;
    private erp.lib.form.SFormField moFieldQuantity;
    
    
    /** Creates new form SFormElement */
    public SFormRequisitionEntry(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        mnFormType = SDataConstants.MFG_REQ_ETY;
        
        initComponents();
        initComponentsExtra();       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jlDbmsItem = new javax.swing.JLabel();
        jtfDbmsItem = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jlQuantity = new javax.swing.JLabel();
        jtfQuantity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jlDbmsItemUnitSymbol = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jbOK = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Requisición de material");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel2.setLayout(new java.awt.GridLayout(2, 1));

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jlDbmsItem.setText("Ítem:");
        jlDbmsItem.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlDbmsItem);

        jtfDbmsItem.setEditable(false);
        jtfDbmsItem.setText("ÍTEM");
        jtfDbmsItem.setFocusable(false);
        jtfDbmsItem.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel6.add(jtfDbmsItem);

        jPanel2.add(jPanel6);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        jlQuantity.setText("Cantidad:");
        jlQuantity.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlQuantity);

        jtfQuantity.setText("QUANTITY");
        jtfQuantity.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jtfQuantity);

        jLabel3.setPreferredSize(new java.awt.Dimension(2, 23));
        jPanel3.add(jLabel3);

        jlDbmsItemUnitSymbol.setText("UNIT");
        jlDbmsItemUnitSymbol.setFocusable(false);
        jlDbmsItemUnitSymbol.setPreferredSize(new java.awt.Dimension(30, 23));
        jPanel3.add(jlDbmsItemUnitSymbol);

        jPanel2.add(jPanel3);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 33));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOK.setText("Aceptar");
        jbOK.setToolTipText("[Ctrl + Enter]");
        jbOK.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbOK);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jPanel1.add(jbCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-549)/2, (screenSize.height-151)/2, 549, 151);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void initComponentsExtra() {
        mvFields = new Vector<SFormField>();

        moFieldDbmsItem = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfDbmsItem, jlDbmsItem);
        moFieldQuantity = new SFormField(miClient, SLibConstants.DATA_TYPE_DOUBLE, true, jtfQuantity, jlQuantity);
        moFieldQuantity.setMinInclusive(true);
        
        mvFields.add(moFieldDbmsItem);
        mvFields.add(moFieldQuantity);
        
        jbOK.addActionListener(this);
        jbCancel.addActionListener(this);
        
        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction actionCancel = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionCancel, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
            // jcbFkBizPartnerId_n.requestFocus();
        }
    }
            
    private void actionOk() {
        SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbOK;
    private javax.swing.JLabel jlDbmsItem;
    private javax.swing.JLabel jlDbmsItemUnitSymbol;
    private javax.swing.JLabel jlQuantity;
    private javax.swing.JTextField jtfDbmsItem;
    private javax.swing.JTextField jtfQuantity;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moRequisitionEntry = null;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        jlDbmsItemUnitSymbol.setText("");
    }

    @Override
    public void formRefreshCatalogues() {
        
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }
        
        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        int i = 0;
        moRequisitionEntry = (SDataRequisitionEntry) registry;

        moFieldDbmsItem.setString(moRequisitionEntry.getDbmsItemKey() + " - " + moRequisitionEntry.getDbmsItem());
        moFieldQuantity.setDouble(moRequisitionEntry.getQuantity());
        jlDbmsItemUnitSymbol.setText(moRequisitionEntry.getDbmsItemUnitSymbol());
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        if (moRequisitionEntry == null) {
            moRequisitionEntry = new SDataRequisitionEntry();
        }

        moRequisitionEntry.setQuantity(moFieldQuantity.getDouble());
        
        return moRequisitionEntry;
    }

    @Override
    public void setValue(int type, Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOK) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }            
        }
    }
}
