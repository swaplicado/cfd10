/*
 * DFormCompany.java
 *
 * Created on 19 de agosto de 2008, 11:10 AM
 */

package erp.mmfg.form;

import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.lib.SLibConstants;
import erp.lib.SLibTimeUtilities;
import erp.lib.form.SFormComponentItem;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.mmfg.data.SDataCostClosePeriod;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.JOptionPane;
import sa.lib.SLibUtils;

/**
 *
 * @author  Néstor Ávalos, Sergio Flores
 */
public class SDialogMfgClosePeriod extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mmfg.data.SDataCostClosePeriod moCostClosePeriod;
    private erp.lib.form.SFormField moFieldWeekStart;
    private erp.lib.form.SFormField moFieldWeekEnd;
    private erp.lib.form.SFormField moFieldPkTypeCostObjectId;
    private erp.lib.form.SFormField moFieldPkCompanyBranchId;
    private erp.lib.form.SFormField moFieldPkEntityId_n;
    private erp.lib.form.SFormField moFieldPkLineId_n;
    private erp.lib.form.SFormField moFieldPkProductionOrderId_n;

    private java.util.Vector<java.lang.String[]> mvEntryAccounts;

    /** Creates new form DFormCompany */
    public SDialogMfgClosePeriod(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;
        mnFormType = SDataConstants.MFG_COST;

        initComponents();
        initComponentsExtra();

        // setModalityType(ModalityType.MODELESS);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgCurrency = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel8 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlPkTypeCostObjectId = new javax.swing.JLabel();
        jcbPkTypeCostObjectId = new javax.swing.JComboBox<SFormComponentItem>();
        jlDummy = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jlFkCompanyBranchId = new javax.swing.JLabel();
        jcbFkCompanyBranchId = new javax.swing.JComboBox<SFormComponentItem>();
        jlDummy1 = new javax.swing.JLabel();
        jbFkCompanyBranchId = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jlPkEntityId_n = new javax.swing.JLabel();
        jcbPkEntityId_n = new javax.swing.JComboBox<SFormComponentItem>();
        jlDummy2 = new javax.swing.JLabel();
        jbPkEntityId_n = new javax.swing.JButton();
        jPanel51 = new javax.swing.JPanel();
        jlPkLineId_n = new javax.swing.JLabel();
        jcbPkLineId_n = new javax.swing.JComboBox<SFormComponentItem>();
        jlDummy6 = new javax.swing.JLabel();
        jbPkLineId_n = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jlPkProductionOrderId_n = new javax.swing.JLabel();
        jcbPkProductionOrderId_n = new javax.swing.JComboBox<SFormComponentItem>();
        jlDummy5 = new javax.swing.JLabel();
        jbPkProductionOrderId_n = new javax.swing.JButton();
        jPanel52 = new javax.swing.JPanel();
        jlWeekStart = new javax.swing.JLabel();
        jtfWeekStart = new javax.swing.JFormattedTextField();
        jlDummy3 = new javax.swing.JLabel();
        jbWeekStart = new javax.swing.JButton();
        jPanel53 = new javax.swing.JPanel();
        jlWeekEnd = new javax.swing.JLabel();
        jtfWeekEnd = new javax.swing.JFormattedTextField();
        jlDummy4 = new javax.swing.JLabel();
        jbWeekEnd = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cerrar período"); // NOI18N
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Período:"));
        jPanel8.setLayout(new java.awt.GridLayout(8, 1, 0, 1));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlPkTypeCostObjectId.setText("Tipo objeto costo: *");
        jlPkTypeCostObjectId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlPkTypeCostObjectId);

        jcbPkTypeCostObjectId.setPreferredSize(new java.awt.Dimension(400, 23));
        jcbPkTypeCostObjectId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbPkTypeCostObjectIdItemStateChanged(evt);
            }
        });
        jPanel4.add(jcbPkTypeCostObjectId);

        jlDummy.setText("jLabel1");
        jlDummy.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel4.add(jlDummy);

        jPanel8.add(jPanel4);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlFkCompanyBranchId.setText("Sucursal: *");
        jlFkCompanyBranchId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlFkCompanyBranchId);

        jcbFkCompanyBranchId.setPreferredSize(new java.awt.Dimension(400, 23));
        jcbFkCompanyBranchId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFkCompanyBranchIdItemStateChanged(evt);
            }
        });
        jPanel3.add(jcbFkCompanyBranchId);

        jlDummy1.setText("jLabel1");
        jlDummy1.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel3.add(jlDummy1);

        jbFkCompanyBranchId.setText("...");
        jbFkCompanyBranchId.setToolTipText("Seleccionar sucursal");
        jbFkCompanyBranchId.setFocusable(false);
        jbFkCompanyBranchId.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel3.add(jbFkCompanyBranchId);

        jPanel8.add(jPanel3);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlPkEntityId_n.setText("Planta:");
        jlPkEntityId_n.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlPkEntityId_n);

        jcbPkEntityId_n.setPreferredSize(new java.awt.Dimension(400, 23));
        jcbPkEntityId_n.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbPkEntityId_nItemStateChanged(evt);
            }
        });
        jPanel5.add(jcbPkEntityId_n);

        jlDummy2.setText("jLabel1");
        jlDummy2.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel5.add(jlDummy2);

        jbPkEntityId_n.setText("...");
        jbPkEntityId_n.setToolTipText("Seleccionar sucursal");
        jbPkEntityId_n.setFocusable(false);
        jbPkEntityId_n.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel5.add(jbPkEntityId_n);

        jPanel8.add(jPanel5);

        jPanel51.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlPkLineId_n.setText("Línea:");
        jlPkLineId_n.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel51.add(jlPkLineId_n);

        jcbPkLineId_n.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel51.add(jcbPkLineId_n);

        jlDummy6.setText("jLabel1");
        jlDummy6.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel51.add(jlDummy6);

        jbPkLineId_n.setText("...");
        jbPkLineId_n.setToolTipText("Seleccionar sucursal");
        jbPkLineId_n.setFocusable(false);
        jbPkLineId_n.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel51.add(jbPkLineId_n);

        jPanel8.add(jPanel51);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlPkProductionOrderId_n.setText("Orden producción:");
        jlPkProductionOrderId_n.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlPkProductionOrderId_n);

        jcbPkProductionOrderId_n.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel6.add(jcbPkProductionOrderId_n);

        jlDummy5.setText("jLabel1");
        jlDummy5.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel6.add(jlDummy5);

        jbPkProductionOrderId_n.setText("...");
        jbPkProductionOrderId_n.setToolTipText("Seleccionar sucursal");
        jbPkProductionOrderId_n.setFocusable(false);
        jbPkProductionOrderId_n.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel6.add(jbPkProductionOrderId_n);

        jPanel8.add(jPanel6);

        jPanel52.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlWeekStart.setText("Semana comienza: *");
        jlWeekStart.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel52.add(jlWeekStart);

        jtfWeekStart.setText("WEEK_START");
        jtfWeekStart.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel52.add(jtfWeekStart);

        jlDummy3.setText("jLabel1");
        jlDummy3.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel52.add(jlDummy3);

        jbWeekStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_cal.gif"))); // NOI18N
        jbWeekStart.setToolTipText("Seleccionar semana comienza");
        jbWeekStart.setFocusable(false);
        jbWeekStart.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel52.add(jbWeekStart);

        jPanel8.add(jPanel52);

        jPanel53.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 1));

        jlWeekEnd.setText("Semana termina: *");
        jlWeekEnd.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel53.add(jlWeekEnd);

        jtfWeekEnd.setText("WEEK_END");
        jtfWeekEnd.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel53.add(jtfWeekEnd);

        jlDummy4.setText("jLabel1");
        jlDummy4.setPreferredSize(new java.awt.Dimension(1, 23));
        jPanel53.add(jlDummy4);

        jbWeekEnd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/cal_cal.gif"))); // NOI18N
        jbWeekEnd.setToolTipText("Seleccionar semana termina");
        jbWeekEnd.setFocusable(false);
        jbWeekEnd.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel53.add(jbWeekEnd);

        jPanel8.add(jPanel53);

        getContentPane().add(jPanel8, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel2.add(jbOk);

        jbCancel.setText("Cerrar"); // NOI18N
        jbCancel.setToolTipText("[Escape]");
        jbCancel.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel2.add(jbCancel);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-551)/2, (screenSize.height-305)/2, 551, 305);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void jcbPkTypeCostObjectIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbPkTypeCostObjectIdItemStateChanged
        actionPkTypeCostObjectIdItemStateChanged();
}//GEN-LAST:event_jcbPkTypeCostObjectIdItemStateChanged

    private void jcbFkCompanyBranchIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFkCompanyBranchIdItemStateChanged
        actionPkCompanyBranchIdItemStateChanged();
}//GEN-LAST:event_jcbFkCompanyBranchIdItemStateChanged

    private void jcbPkEntityId_nItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbPkEntityId_nItemStateChanged
        actionPkEntityIdItemStateChanged();
}//GEN-LAST:event_jcbPkEntityId_nItemStateChanged

    private void initComponentsExtra() {
        mvFields = new Vector<SFormField>();

        moFieldPkTypeCostObjectId = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbPkTypeCostObjectId, jlPkTypeCostObjectId);
        moFieldPkCompanyBranchId = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkCompanyBranchId, jlFkCompanyBranchId);
        moFieldPkCompanyBranchId.setPickerButton(jbFkCompanyBranchId);
        moFieldPkEntityId_n = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbPkEntityId_n, jlPkEntityId_n);
        moFieldPkEntityId_n.setPickerButton(jbPkEntityId_n);
        moFieldPkLineId_n = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbPkLineId_n, jlPkLineId_n);
        moFieldPkLineId_n.setPickerButton(jbPkLineId_n);
        moFieldPkProductionOrderId_n = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_KEY, false, jcbPkProductionOrderId_n, jlPkProductionOrderId_n);
        moFieldPkProductionOrderId_n.setPickerButton(jbPkProductionOrderId_n);
        moFieldWeekStart = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_DATE, true, jtfWeekStart, jlWeekStart);
        moFieldWeekStart.setPickerButton(jbWeekStart);
        moFieldWeekEnd = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_DATE, true, jtfWeekEnd, jlWeekEnd);
        moFieldWeekEnd.setPickerButton(jbWeekEnd);

        mvFields.add(moFieldPkTypeCostObjectId);
        mvFields.add(moFieldPkCompanyBranchId);
        mvFields.add(moFieldPkEntityId_n);
        mvFields.add(moFieldPkLineId_n);
        mvFields.add(moFieldPkProductionOrderId_n);
        mvFields.add(moFieldWeekStart);
        mvFields.add(moFieldWeekEnd);

        jbFkCompanyBranchId.addActionListener(this);
        jbPkEntityId_n.addActionListener(this);
        jbPkLineId_n.addActionListener(this);
        jbPkProductionOrderId_n.addActionListener(this);
        jbWeekStart.addActionListener(this);
        jbWeekEnd.addActionListener(this);
        jbCancel.addActionListener(this);
        jbOk.addActionListener(this);

        mvEntryAccounts = new Vector<java.lang.String[]>();

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction actionCancel = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionCancel, "cancel", KeyEvent.VK_ESCAPE, 0);

        // setModalityType(ModalityType.MODELESS);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
            jcbPkTypeCostObjectId.requestFocus();
        }
    }

    private void actionPkTypeCostObjectIdItemStateChanged() {
        if (jcbPkTypeCostObjectId.getSelectedIndex() > 0) {
            switch (moFieldPkTypeCostObjectId.getKeyAsIntArray()[0]) {
                case SDataConstantsSys.MFGS_TP_COST_ORD:
                    jcbPkEntityId_n.setEnabled(false);
                    jbPkEntityId_n.setEnabled(false);
                    jcbPkLineId_n.setEnabled(false);
                    jbPkLineId_n.setEnabled(false);
                    jcbPkProductionOrderId_n.setEnabled(true);
                    jbPkProductionOrderId_n.setEnabled(true);
                    SFormUtilities.populateComboBox(miClient, jcbPkProductionOrderId_n, SDataConstants.MFG_ORD, new Object[] { "" + SDataConstantsSys.MFGS_ST_ORD_PROC, SDataConstants.MFGX_ORD_MAIN_NA, false });
                    break;
                case SDataConstantsSys.MFGS_TP_COST_LINE:
                    jcbPkEntityId_n.setEnabled(true);
                    jbPkEntityId_n.setEnabled(true);
                    jcbPkLineId_n.setEnabled(true);
                    jbPkLineId_n.setEnabled(true);
                    jcbPkProductionOrderId_n.setEnabled(false);
                    jbPkProductionOrderId_n.setEnabled(false);

                    if (jcbFkCompanyBranchId.getSelectedIndex() > 0) {
                        SFormUtilities.populateComboBox(miClient, jcbPkEntityId_n, SDataConstants.CFGU_COB_ENT, new int[] { moFieldPkCompanyBranchId.getKeyAsIntArray()[0], SDataConstantsSys.CFGS_CT_ENT_PLANT });
                    }

                    if (jcbPkEntityId_n.getSelectedIndex() > 0) {
                        SFormUtilities.populateComboBox(miClient, jcbPkLineId_n, SDataConstants.MFG_LINE, new int[] { moFieldPkEntityId_n.getKeyAsIntArray()[0], moFieldPkEntityId_n.getKeyAsIntArray()[1] } );
                    }
                    break;
                case SDataConstantsSys.MFGS_TP_COST_PLT:
                    jcbPkEntityId_n.setEnabled(true);
                    jbPkEntityId_n.setEnabled(true);
                    jcbPkLineId_n.setEnabled(false);
                    jbPkLineId_n.setEnabled(false);
                    jcbPkProductionOrderId_n.setEnabled(false);
                    jbPkProductionOrderId_n.setEnabled(false);

                    if (jcbFkCompanyBranchId.getSelectedIndex() > 0) {
                        SFormUtilities.populateComboBox(miClient, jcbPkEntityId_n, SDataConstants.CFGU_COB_ENT, new int[] { moFieldPkCompanyBranchId.getKeyAsIntArray()[0], SDataConstantsSys.CFGS_CT_ENT_PLANT });
                    }
                    break;
                case SDataConstantsSys.MFGS_TP_COST_COB:
                    jcbPkEntityId_n.setEnabled(false);
                    jbPkEntityId_n.setEnabled(false);
                    jcbPkLineId_n.setEnabled(false);
                    jbPkLineId_n.setEnabled(false);
                    jcbPkProductionOrderId_n.setEnabled(false);
                    jbPkProductionOrderId_n.setEnabled(false);
            }
        }
    }

    private void actionPkCompanyBranchIdItemStateChanged() {
        if (jcbFkCompanyBranchId.getSelectedIndex() > 0) {
            switch (moFieldPkTypeCostObjectId.getKeyAsIntArray()[0]) {
                case SDataConstantsSys.MFGS_TP_COST_PLT:
                case SDataConstantsSys.MFGS_TP_COST_LINE:
                    SFormUtilities.populateComboBox(miClient, jcbPkEntityId_n, SDataConstants.CFGU_COB_ENT, new int[] { moFieldPkCompanyBranchId.getKeyAsIntArray()[0], SDataConstantsSys.CFGS_CT_ENT_PLANT });
                    break;
            }
        }
    }

    private void actionPkEntityIdItemStateChanged() {
        if (moFieldPkTypeCostObjectId.getKeyAsIntArray()[0] == SDataConstantsSys.MFGS_TP_COST_LINE) {
            SFormUtilities.populateComboBox(miClient, jcbPkLineId_n, SDataConstants.MFG_LINE, moFieldPkEntityId_n.getKey());
        }
    }

    private void actionFkCobId() {
        miClient.pickOption(SDataConstants.BPSU_BPB, moFieldPkTypeCostObjectId, null);
    }

    private void actionFkBpId() {
        miClient.pickOption(SDataConstants.BPSX_BP_SUP, moFieldPkEntityId_n, null);
    }

    private void actionDate() {
        miClient.getGuiDatePickerXXX().pickDate(moFieldPkProductionOrderId_n.getDate(), moFieldPkProductionOrderId_n);
    }

    private void actionWeekStart() {
        miClient.getGuiDatePickerXXX().pickDate(moFieldWeekStart.getDate(), moFieldWeekStart);
        moFieldWeekEnd.setDate(SLibTimeUtilities.addDate(moFieldWeekStart.getDate(), 0, 0, 6));
    }

    private void actionWeekEnd() {
        miClient.getGuiDatePickerXXX().pickDate(moFieldWeekEnd.getDate(), moFieldWeekEnd);
    }

    private void actionEdit(boolean edit) {

    }

    private void actionOk() {
        SFormValidation validation = formValidate();

        if (miClient.showMsgBoxConfirm("Está seguro(a) de cerrar el período '" + SLibUtils.DateFormatDate.format(moFieldWeekStart.getDate()) + "-" + SLibUtils.DateFormatDate.format(moFieldWeekEnd.getDate()) + "'.") == JOptionPane.YES_OPTION) {
            if (validation.getIsError()) {
                if (validation.getComponent() != null) {
                    validation.getComponent().requestFocus();
                }
                if (validation.getMessage().length() > 0) {
                    miClient.showMsgBoxWarning(validation.getMessage());
                }
            }
            else {
                mnFormResult = SLibConstants.FORM_RESULT_OK;
                setVisible(false);
            }
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgCurrency;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbFkCompanyBranchId;
    private javax.swing.JButton jbOk;
    private javax.swing.JButton jbPkEntityId_n;
    private javax.swing.JButton jbPkLineId_n;
    private javax.swing.JButton jbPkProductionOrderId_n;
    private javax.swing.JButton jbWeekEnd;
    private javax.swing.JButton jbWeekStart;
    private javax.swing.JComboBox<SFormComponentItem> jcbFkCompanyBranchId;
    private javax.swing.JComboBox<SFormComponentItem> jcbPkEntityId_n;
    private javax.swing.JComboBox<SFormComponentItem> jcbPkLineId_n;
    private javax.swing.JComboBox<SFormComponentItem> jcbPkProductionOrderId_n;
    private javax.swing.JComboBox<SFormComponentItem> jcbPkTypeCostObjectId;
    private javax.swing.JLabel jlDummy;
    private javax.swing.JLabel jlDummy1;
    private javax.swing.JLabel jlDummy2;
    private javax.swing.JLabel jlDummy3;
    private javax.swing.JLabel jlDummy4;
    private javax.swing.JLabel jlDummy5;
    private javax.swing.JLabel jlDummy6;
    private javax.swing.JLabel jlFkCompanyBranchId;
    private javax.swing.JLabel jlPkEntityId_n;
    private javax.swing.JLabel jlPkLineId_n;
    private javax.swing.JLabel jlPkProductionOrderId_n;
    private javax.swing.JLabel jlPkTypeCostObjectId;
    private javax.swing.JLabel jlWeekEnd;
    private javax.swing.JLabel jlWeekStart;
    private javax.swing.JFormattedTextField jtfWeekEnd;
    private javax.swing.JFormattedTextField jtfWeekStart;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {

        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moCostClosePeriod = null;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        moFieldWeekStart.setDate(miClient.getSessionXXX().getWorkingDate());
        moFieldWeekEnd.setDate(SLibTimeUtilities.addDate(moFieldWeekStart.getDate(), 0, 0, 6));
    }

    @Override
    public void formRefreshCatalogues() {
        SFormUtilities.populateComboBox(miClient, jcbPkTypeCostObjectId, SDataConstants.MFGS_TP_COST_OBJ);
        SFormUtilities.populateComboBox(miClient, jcbFkCompanyBranchId, SDataConstants.BPSU_BPB, new int[] { miClient.getSessionXXX().getParamsCompany().getPkConfigCoId() });
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        if (!validation.getIsError()) {
            if (moFieldWeekEnd.getDate().compareTo(moFieldWeekStart.getDate()) < 0) {
                validation.setMessage("La 'semana termina' debe ser mayor o igual a la 'semana comienza'.");
                validation.setComponent(jtfWeekStart);
            }
        }

        if (!validation.getIsError()) {

            // Validate accounts:

            try {
                switch (moFieldPkTypeCostObjectId.getKeyAsIntArray()[0]) {
                    case SDataConstantsSys.MFGS_TP_COST_ORD:
                        mvEntryAccounts.add(SDataUtilities.obtainAccountsCosts(miClient, moFieldPkEntityId_n.getKeyAsIntArray(), true));
                        break;
                    default:
                        mvEntryAccounts.add(SDataUtilities.obtainAccountsCosts(miClient, moFieldPkEntityId_n.getKeyAsIntArray(), false));
                        break;
                }

                if (mvEntryAccounts.get(0)[0].toString().length() <=0 && mvEntryAccounts.get(0)[1].toString().length() <= 0) {
                    validation.setMessage("La sucursal '" + jcbFkCompanyBranchId.getSelectedItem() + "' no tiene configuradas las cuentas contables para costos.\n");
                    validation.setComponent(jcbFkCompanyBranchId);
                }
            }
            catch (Exception e) {
                validation.setMessage("No fue posible encontrar las cuentas contables de los costos.\n" + e);
                validation.setComponent(jcbFkCompanyBranchId);
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        moCostClosePeriod = (SDataCostClosePeriod) registry;

        moFieldPkTypeCostObjectId.setFieldValue(new int[] { moCostClosePeriod.getPkTypeCostObjectId() });
        moFieldPkCompanyBranchId.setFieldValue(new int[] { moCostClosePeriod.getPkRefCompanyBranchId() });

        switch(moFieldPkTypeCostObjectId.getKeyAsIntArray()[0]) {
            case SDataConstantsSys.MFGS_TP_COST_ORD:
                moFieldPkProductionOrderId_n.setFieldValue(new int[] { moCostClosePeriod.getPkRefReferenceId(), moCostClosePeriod.getPkRefEntityId() });
                break;
            case SDataConstantsSys.MFGS_TP_COST_PLT:
                moFieldPkEntityId_n.setFieldValue(new int[] { moCostClosePeriod.getPkRefCompanyBranchId(), moCostClosePeriod.getPkRefReferenceId() });
                break;
            case SDataConstantsSys.MFGS_TP_COST_LINE:
                moFieldPkEntityId_n.setFieldValue(new int[] { moCostClosePeriod.getPkRefCompanyBranchId(), moCostClosePeriod.getPkRefReferenceId() });
                moFieldPkLineId_n.setFieldValue(new int[] { moCostClosePeriod.getPkRefCompanyBranchId(), moCostClosePeriod.getPkRefReferenceId(), moCostClosePeriod.getPkRefEntityId() });
                break;
        }

        moFieldWeekStart.setFieldValue(moCostClosePeriod.getDbmsDateStart());
        moFieldWeekEnd.setFieldValue(moCostClosePeriod.getDbmsDateEnd());
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {

        if (moCostClosePeriod == null) {
            moCostClosePeriod = new SDataCostClosePeriod();
        }

        moCostClosePeriod.setPkTypeCostObjectId(moFieldPkTypeCostObjectId.getKeyAsIntArray()[0]);
        moCostClosePeriod.setDbmsDateStart(moFieldWeekStart.getDate());
        moCostClosePeriod.setDbmsDateEnd(moFieldWeekEnd.getDate());
        moCostClosePeriod.setDbmsPeriod(SLibTimeUtilities.digestYearMonth(moFieldWeekStart.getDate()));
        moCostClosePeriod.setDbmsFkAccountPayRoll(mvEntryAccounts.get(0)[0]);
        moCostClosePeriod.setDbmsFkAccountMfgWp(mvEntryAccounts.get(0)[1]);
        moCostClosePeriod.setDbmsPkBookkepingCenterId(miClient.getSessionXXX().getCompany().getDbmsDataCompany().getDbmsHqBranch().getDbmsDataCompanyBranchBkc().getPkBookkepingCenterId());

        // Type of object cost:

        moCostClosePeriod.setPkRefCompanyBranchId(moFieldPkCompanyBranchId.getKeyAsIntArray()[0]);
        switch (moFieldPkTypeCostObjectId.getKeyAsIntArray()[0]) {
            case SDataConstantsSys.MFGS_TP_COST_ORD:
                moCostClosePeriod.setPkRefReferenceId(moFieldPkProductionOrderId_n.getKeyAsIntArray()[0]);
                moCostClosePeriod.setPkRefEntityId(moFieldPkProductionOrderId_n.getKeyAsIntArray()[1]);
                break;
            case SDataConstantsSys.MFGS_TP_COST_LINE:
                moCostClosePeriod.setPkRefReferenceId(moFieldPkLineId_n.getKeyAsIntArray()[1]);
                moCostClosePeriod.setPkRefEntityId(moFieldPkLineId_n.getKeyAsIntArray()[2]);
                break;
            case SDataConstantsSys.MFGS_TP_COST_PLT:
                moCostClosePeriod.setPkRefReferenceId(moFieldPkEntityId_n.getKeyAsIntArray()[0]);
                moCostClosePeriod.setPkRefEntityId(moFieldPkEntityId_n.getKeyAsIntArray()[1]);
                break;
        }

        return moCostClosePeriod;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
            else if (button == jbFkCompanyBranchId) {
                actionFkCobId();
            }
            else if (button == jbWeekStart) {
                actionWeekStart();
            }
            else if (button == jbWeekEnd) {
                actionWeekEnd();
            }
        }
    }

}
