/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.hrs.form;

import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanPanel;

/**
 *
 * @author Juan Barajas, Sergio Flores
 */
public class SPanelHrsFilterPayrollStatus extends SBeanPanel {

    public static final int STATUS_UNDEF = 1;
    public static final int STATUS_CLOSE = 2;
    public static final int STATUS_OPEN = 3;
    
    /**
     * Creates new form SPanelHrsFilterPayrollStatus
     * @param client
     */
    public SPanelHrsFilterPayrollStatus(final SGuiClient client) {
        setPanelSettings(client);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        moGroupStatus = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        moRadUndef = new sa.lib.gui.bean.SBeanFieldRadio();
        moRadClose = new sa.lib.gui.bean.SBeanFieldRadio();
        moRadOpen = new sa.lib.gui.bean.SBeanFieldRadio();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel1.setText("Mostrar n√≥minas:");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel1.add(jLabel1);

        moGroupStatus.add(moRadUndef);
        moRadUndef.setText("Todas");
        moRadUndef.setPreferredSize(new java.awt.Dimension(65, 23));
        jPanel1.add(moRadUndef);

        moGroupStatus.add(moRadClose);
        moRadClose.setText("Cerradas");
        moRadClose.setPreferredSize(new java.awt.Dimension(80, 23));
        jPanel1.add(moRadClose);

        moGroupStatus.add(moRadOpen);
        moRadOpen.setText("Abiertas");
        moRadOpen.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(moRadOpen);

        add(jPanel1, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents

    private void initComponentsCustom() {
        moRadOpen.setBooleanSettings(SGuiUtils.getLabelName(moRadOpen.getText()), false);
        moRadClose.setBooleanSettings(SGuiUtils.getLabelName(moRadClose.getText()), false);
        moRadUndef.setBooleanSettings(SGuiUtils.getLabelName(moRadUndef.getText()), false);
        
        moRadUndef.setSelected(true);
        enableFields(true);
    }
    
    private void enableFields(boolean enable) {
        moRadOpen.setEnabled(enable);
        moRadClose.setEnabled(enable);
        moRadUndef.setEnabled(enable);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.ButtonGroup moGroupStatus;
    private sa.lib.gui.bean.SBeanFieldRadio moRadClose;
    private sa.lib.gui.bean.SBeanFieldRadio moRadOpen;
    private sa.lib.gui.bean.SBeanFieldRadio moRadUndef;
    // End of variables declaration//GEN-END:variables

    public void setSelectedClose() {
        moRadClose.setSelected(true);
        enableFields(false);
    }
    
    public void setSelectedAll() {
        moRadUndef.setSelected(!moRadUndef.isEnabled());
        enableFields(true);
    }
    
    @Override
    public void addAllListeners() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void removeAllListeners() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void reloadCatalogues() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public SGuiValidation validatePanel() {
        SGuiValidation validation = moFields.validateFields();
        
        return validation;
    }
    
    @Override
    public Object getValue(int type) {
        Object value = null;
        
        if (moRadUndef.getValue()) {
            value = STATUS_UNDEF;
        }
        else if (moRadClose.getValue()) {
            value = STATUS_CLOSE;
        }
        else if (moRadOpen.getValue()) {
            value = STATUS_OPEN;
        }
        
        return value;
    }
}
