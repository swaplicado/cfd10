/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.hrs.form;

import erp.mod.SModConsts;
import erp.mod.hrs.db.SHrsUtils;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JTextField;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanFormDialog;

/**
 *
 * @author Claudio Peña
 */
public class SDialogLayoutAF02 extends SBeanFormDialog implements FocusListener, ActionListener {

    private int mnTypeLayout;
    private int normalStatementAF02 = 0;
    private int supplementaryStatementAF02 = 1;
        
    /**
     * Creates new form SDialogLayoutAF02
     */
    public SDialogLayoutAF02(SGuiClient client, String title) {
        setFormSettings(client, SModConsts.HRSX_EMP_MASSIVE_UPD_SSC, 0, 0, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeLayout02 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        moNormal = new sa.lib.gui.bean.SBeanFieldRadio();
        jPanel23 = new javax.swing.JPanel();
        moComplementary = new sa.lib.gui.bean.SBeanFieldRadio();
        jPanel35 = new javax.swing.JPanel();
        jlYear = new javax.swing.JLabel();
        moIntPeriodYear = new sa.lib.gui.bean.SBeanFieldInteger();
        jPanel36 = new javax.swing.JPanel();
        jlBimester = new javax.swing.JLabel();
        moIntBimester = new sa.lib.gui.bean.SBeanFieldInteger();

        setTitle("Layout anexo AF02:");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setMaximumSize(new java.awt.Dimension(350, 300));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros de layout AF02:"));
        jPanel15.setMaximumSize(new java.awt.Dimension(350, 250));
        jPanel15.setPreferredSize(new java.awt.Dimension(230, 100));
        jPanel15.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel16.setMaximumSize(new java.awt.Dimension(350, 350));
        jPanel16.setPreferredSize(new java.awt.Dimension(218, 110));
        jPanel16.setLayout(new java.awt.GridLayout(3, 1, 0, 3));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel10.setLayout(new java.awt.GridLayout(1, 1, 0, 1));

        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        typeLayout02.add(moNormal);
        moNormal.setText("Normal");
        moNormal.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel22.add(moNormal);

        jPanel10.add(jPanel22);

        jPanel23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        typeLayout02.add(moComplementary);
        moComplementary.setText("Complementaría ");
        moComplementary.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel23.add(moComplementary);

        jPanel10.add(jPanel23);

        jPanel16.add(jPanel10);

        jPanel35.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlYear.setText("Ejercicio:*");
        jlYear.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel35.add(jlYear);

        moIntPeriodYear.setPreferredSize(new java.awt.Dimension(103, 23));
        jPanel35.add(moIntPeriodYear);

        jPanel16.add(jPanel35);

        jPanel36.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBimester.setText("Periodo:*");
        jlBimester.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel36.add(jlBimester);
        jlBimester.getAccessibleContext().setAccessibleName("No. bimestre:*");

        moIntBimester.setPreferredSize(new java.awt.Dimension(103, 23));
        jPanel36.add(moIntBimester);

        jPanel16.add(jPanel36);

        jPanel15.add(jPanel16, java.awt.BorderLayout.PAGE_START);

        jPanel1.add(jPanel15, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        windowClosed();
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JLabel jlBimester;
    private javax.swing.JLabel jlYear;
    private sa.lib.gui.bean.SBeanFieldRadio moComplementary;
    private sa.lib.gui.bean.SBeanFieldInteger moIntBimester;
    private sa.lib.gui.bean.SBeanFieldInteger moIntPeriodYear;
    private sa.lib.gui.bean.SBeanFieldRadio moNormal;
    private javax.swing.ButtonGroup typeLayout02;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 450, 300);

        moNormal.setBooleanSettings(SGuiUtils.getLabelName(moNormal.getText()), true);
        moComplementary.setBooleanSettings(SGuiUtils.getLabelName(moComplementary.getText()), false);
        
        moIntPeriodYear.setIntegerSettings(SGuiUtils.getLabelName(jlYear.getText()), SGuiConsts.GUI_TYPE_INT_CAL_YEAR, true);
        moIntPeriodYear.setMinInteger(2000);
        moIntPeriodYear.setMaxInteger(2100);
        moIntBimester.setIntegerSettings(SGuiUtils.getLabelName(jlBimester.getText()), SGuiConsts.GUI_TYPE_INT_CAL_MONTH, true);
        moIntBimester.setMinInteger(1);
        moIntBimester.setMaxInteger(12);
        
        moIntPeriodYear.setValue(miClient.getSession().getCurrentYear());
        
        moFields.addField(moIntPeriodYear);
        moFields.addField(moIntBimester);
        moFields.addField(moNormal);
        moFields.addField(moComplementary);
      
        moFields.setFormButton(jbSave);
        moNormal.setSelected(true);

        jbSave.setText("Aceptar");
        
        removeAllListeners();
        addAllListeners();
    }
    
    private int getTypeLayout02() {
        if (moNormal.isSelected()) {
            mnTypeLayout = normalStatementAF02;
        }
        else if(moComplementary.isSelected()) {
            mnTypeLayout = supplementaryStatementAF02;
        }
        
       return mnTypeLayout;
    }
    
    @Override
    public void resetForm() {
        moIntPeriodYear.setValue(miClient.getSession().getCurrentYear());
        moIntBimester.resetField();
    }
    
    @Override
    public void windowClosed() {
        super.windowClosed();
        
        try {

        }
        catch (Exception ex) {
            Logger.getLogger(SDialogLayoutAF02.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }
    }
    
    @Override
    public void reloadCatalogues() {
        
    }
    
    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();
    
        return validation;
    }
    
    @Override
     public void actionSave() {
       if (jbSave.isEnabled()) {
            if (SGuiUtils.computeValidation(miClient, validateForm())) {
                dispose();
                try {
                    SHrsUtils.createLayoutAnnexed02(miClient, getTypeLayout02(), moIntPeriodYear.getValue(), moIntBimester.getValue());
                } catch (SQLException ex) {
                    Logger.getLogger(SDialogLayoutAF02.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(SDialogLayoutAF02.class.getName()).log(Level.SEVERE, null, ex);
                }
                mnFormResult = SGuiConsts.FORM_RESULT_OK;
                dispose();
            }
        }
    }

    @Override
    public void addAllListeners() {
        
    }

    @Override
    public void removeAllListeners() {
        
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {

    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void focusGained(FocusEvent e) {

    }

    @Override
    public void focusLost(FocusEvent e) {
        if (e.getSource() instanceof javax.swing.JTextField) {
            JTextField textField = (JTextField) e.getSource();
            
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            JButton button = (JButton) e.getSource();
        }
    }
}
