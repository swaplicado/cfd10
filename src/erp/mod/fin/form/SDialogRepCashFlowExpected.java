/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mod.fin.form;

import erp.client.SClientInterface;
import erp.data.SDataConstantsSys;
import erp.lib.SLibConstants;
import erp.mod.SModConsts;
import erp.mod.SModSysConsts;
import erp.mtrn.form.SDialogFilterFunctionalArea;
import erp.mtrn.data.STrnFunctionalAreaUtils;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import sa.lib.SLibTimeUtils;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanDialogReport;

/**
 *
 * @author Juan Barajas, Edwin Carmona, Sergio Flores
 */
public class SDialogRepCashFlowExpected extends SBeanDialogReport implements ActionListener {
    
    private erp.mtrn.form.SDialogFilterFunctionalArea moDialogFilterFunctionalArea;
    private int mnFunctionalAreaId;
    private String msFunctionalAreasIds;
    
    /**
     * Creates new form SDialogRepCashFlowExpected
     * @param client
     * @param formSubtype
     */
    public SDialogRepCashFlowExpected(SGuiClient client, int formSubtype, String title) {
        setFormSettings(client, SModConsts.FINR_CSH_FLW_EXP, formSubtype, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jlDateStart = new javax.swing.JLabel();
        moBaseDate = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel3 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jlCompanyBranch = new javax.swing.JLabel();
        moKeyCompanyBranch = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel14 = new javax.swing.JPanel();
        jlBizPartner1 = new javax.swing.JLabel();
        jtfFunctionalArea = new javax.swing.JTextField();
        jbFunctionalArea = new javax.swing.JButton();
        moRadioSummary = new sa.lib.gui.bean.SBeanFieldRadio();
        moRadioDetailBp = new sa.lib.gui.bean.SBeanFieldRadio();
        moRadioDetailBpDps = new sa.lib.gui.bean.SBeanFieldRadio();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros del reporte:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(7, 1, 0, 5));

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDateStart.setText("Fecha base:*");
        jlDateStart.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel11.add(jlDateStart);
        jPanel11.add(moBaseDate);

        jPanel2.add(jPanel11);
        jPanel2.add(jPanel3);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCompanyBranch.setText("Sucursal empresa:");
        jlCompanyBranch.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel13.add(jlCompanyBranch);

        moKeyCompanyBranch.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel13.add(moKeyCompanyBranch);

        jPanel2.add(jPanel13);

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartner1.setText("Área funcional:");
        jlBizPartner1.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel14.add(jlBizPartner1);

        jtfFunctionalArea.setEditable(false);
        jtfFunctionalArea.setPreferredSize(new java.awt.Dimension(300, 23));
        jPanel14.add(jtfFunctionalArea);

        jbFunctionalArea.setText("...");
        jbFunctionalArea.setToolTipText("Seleccionar asociado de negocios:");
        jbFunctionalArea.setFocusable(false);
        jbFunctionalArea.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel14.add(jbFunctionalArea);

        jPanel2.add(jPanel14);

        buttonGroup1.add(moRadioSummary);
        moRadioSummary.setText("Resumen");
        jPanel2.add(moRadioSummary);

        buttonGroup1.add(moRadioDetailBp);
        moRadioDetailBp.setText("Resumen con asociados de negocios");
        jPanel2.add(moRadioDetailBp);

        buttonGroup1.add(moRadioDetailBpDps);
        moRadioDetailBpDps.setText("Detalle");
        jPanel2.add(moRadioDetailBpDps);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jbFunctionalArea;
    private javax.swing.JLabel jlBizPartner1;
    private javax.swing.JLabel jlCompanyBranch;
    private javax.swing.JLabel jlDateStart;
    private javax.swing.JTextField jtfFunctionalArea;
    private sa.lib.gui.bean.SBeanFieldDate moBaseDate;
    private sa.lib.gui.bean.SBeanFieldKey moKeyCompanyBranch;
    private sa.lib.gui.bean.SBeanFieldRadio moRadioDetailBp;
    private sa.lib.gui.bean.SBeanFieldRadio moRadioDetailBpDps;
    private sa.lib.gui.bean.SBeanFieldRadio moRadioSummary;
    // End of variables declaration//GEN-END:variables

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 480, 300);
        
        moBaseDate.setDateSettings(miClient, SGuiUtils.getLabelName(jlDateStart.getText()), true);
        moKeyCompanyBranch.setKeySettings(miClient, SGuiUtils.getLabelName(jlCompanyBranch.getText()), false);

        moFields.addField(moBaseDate);
        moFields.addField(moKeyCompanyBranch);
        moFields.addField(moRadioSummary);
        moFields.addField(moRadioDetailBp);

        moFields.setFormButton(jbPrint);
        
        moBaseDate.setValue(SLibTimeUtils.getBeginOfMonth(miClient.getSession().getCurrentDate()));
        moRadioSummary.setSelected(true);
        
        jbFunctionalArea.addActionListener(this);
        
        // áreas funcionales:
        mnFunctionalAreaId = SLibConstants.UNDEFINED;
        moDialogFilterFunctionalArea = new SDialogFilterFunctionalArea((SClientInterface) miClient);
        renderFunctionalArea();
        
        reloadCatalogues();
    }
    
    private void actionFunctionalArea() {
        moDialogFilterFunctionalArea.formRefreshCatalogues();
        moDialogFilterFunctionalArea.formReset();
        moDialogFilterFunctionalArea.setFunctionalAreaId(mnFunctionalAreaId);
        moDialogFilterFunctionalArea.setFormVisible(true);

        if (moDialogFilterFunctionalArea.getFormResult() == erp.lib.SLibConstants.FORM_RESULT_OK) {
            mnFunctionalAreaId = moDialogFilterFunctionalArea.getFunctionalAreaId();
            renderFunctionalArea();
        }
    }
    
    private void renderFunctionalArea() {
        String texts[] = STrnFunctionalAreaUtils.getTextFilterOfFunctionalAreas((SClientInterface) miClient, mnFunctionalAreaId);
        msFunctionalAreasIds = texts[0];
        
        jtfFunctionalArea.setText(texts[1]);
        jtfFunctionalArea.setCaretPosition(0);
    }

    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyCompanyBranch, SModConsts.BPSU_BPB, miClient.getSession().getConfigCompany().getCompanyId(), null);
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation =  moFields.validateFields();        
        return validation;
    }

    @Override
    public void createParamsMap() {
        moParamsMap = miClient.createReportParams();
        moParamsMap.put("nLocalCurrencyId", miClient.getSession().getSessionCustom().getLocalCurrencyKey()[0]);
        moParamsMap.put("sLocalCurrencyKey", miClient.getSession().getSessionCustom().getLocalCurrency());
        moParamsMap.put("nCashSysMoveTypeId", SDataConstantsSys.FINS_TP_SYS_MOV_CASH_CASH[1]);
        moParamsMap.put("nCashSysMoveCatId", SDataConstantsSys.FINS_TP_SYS_MOV_CASH_CASH[0]);
        moParamsMap.put("nBankSysMoveTypeId", SDataConstantsSys.FINS_TP_SYS_MOV_CASH_BANK[1]);
        moParamsMap.put("nBankSysMoveCatId", SDataConstantsSys.FINS_TP_SYS_MOV_CASH_BANK[0]);
        moParamsMap.put("nCustomerysMoveTypeId", SDataConstantsSys.FINS_TP_SYS_MOV_BPS_CUS[1]);
        moParamsMap.put("nCustomerSysMoveCatId", SDataConstantsSys.FINS_TP_SYS_MOV_BPS_CUS[0]);
        moParamsMap.put("nSupplerSysMoveTypeId", SDataConstantsSys.FINS_TP_SYS_MOV_BPS_SUP[1]);
        moParamsMap.put("nSupplierSysMoveCatId", SDataConstantsSys.FINS_TP_SYS_MOV_BPS_SUP[0]);
        moParamsMap.put("nBpCustomerCategoryId", SModSysConsts.BPSS_CT_BP_CUS);
        moParamsMap.put("nBpSupplierCategoryId", SModSysConsts.BPSS_CT_BP_SUP);
        moParamsMap.put("nFidStDps", SModSysConsts.TRNS_ST_DPS_EMITED);
        moParamsMap.put("nYear", SLibTimeUtils.digestYear(moBaseDate.getValue())[0]);
        moParamsMap.put("tBaseDate", moBaseDate.getValue());
        moParamsMap.put("sCompanyBranch", moKeyCompanyBranch.getSelectedIndex() > 0 ? moKeyCompanyBranch.getSelectedItem().getItem() : "(TODAS)");
        moParamsMap.put("sSqlWhereCompanyBranch", moKeyCompanyBranch.getSelectedIndex() > 0 ? " AND r.fid_cob = " + moKeyCompanyBranch.getValue()[0] : "");
        moParamsMap.put("sFuncText", jtfFunctionalArea.getText());
        moParamsMap.put("sFilterFunctionalArea", " AND d.fid_func IN ( " + msFunctionalAreasIds + " ) ");
        moParamsMap.put("bShowDetailBp", moRadioDetailBp.isSelected());
        moParamsMap.put("bShowDetailBpDps", moRadioDetailBpDps.isSelected());
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbFunctionalArea) {
                actionFunctionalArea();
            }
        }
    }
}
