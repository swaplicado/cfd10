/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package erp.mbps.form;

import erp.client.SClientInterface;
import erp.data.SDataConstants;
import erp.data.SDataConstantsSys;
import erp.data.SDataUtilities;
import erp.data.SProcConstants;
import erp.lib.SLibConstants;
import erp.lib.SLibTimeUtilities;
import erp.lib.SLibUtilities;
import erp.lib.data.SDataRegistry;
import erp.lib.form.SFormComponentItem;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import erp.mbps.data.SDataBizPartner;
import erp.mbps.data.SDataBizPartnerBranch;
import erp.mbps.data.SDataBizPartnerBranchAddress;
import erp.mbps.data.SDataBizPartnerBranchContact;
import erp.mbps.data.SDataBizPartnerCategory;
import erp.mfin.data.SFinUtilities;
import erp.mod.SModSysConsts;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import sa.lib.SLibMethod;
import sa.lib.SLibUtils;

/**
 *
 * @author Juan Barajas, Sergio Flores
 */
public class SFormBizPartnerSimple extends javax.swing.JDialog implements erp.lib.form.SFormExtendedInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.mbps.data.SDataBizPartner moBizPartner;
    private erp.mbps.data.SDataBizPartnerBranch moBizPartnerBranch;
    private erp.mbps.data.SDataBizPartnerCategory moBizPartnerCategory;
    private erp.lib.form.SFormField moFieldFkBizPartnerIdentityTypeId;
    private erp.lib.form.SFormField moFieldFirstName;
    private erp.lib.form.SFormField moFieldLastName;
    private erp.lib.form.SFormField moFieldBizPartner;
    private erp.lib.form.SFormField moFieldBizPartnerCommercial;
    private erp.lib.form.SFormField moFieldFiscalId;
    private erp.lib.form.SFormField moFieldAlternativeId;
    private erp.lib.form.SFormField moFieldIsAttBank;
    private erp.lib.form.SFormField moFieldIsAttCarrier;
    private erp.lib.form.SFormField moFieldIsAttSalesAgent;
    private erp.lib.form.SFormField moFieldIsAttEmployee;
    private erp.lib.form.SFormField moFieldIsAttPartnerShareholder;
    private erp.lib.form.SFormField moFieldIsAttRelatedParty;
    private erp.lib.form.SFormField moFieldFkBizPartnerCategoryId;
    private erp.lib.form.SFormField moFieldFkBizPartnerTypeId;
    private erp.lib.form.SFormField moFieldKey;
    private erp.lib.form.SFormField moFieldEmail;

    private erp.lib.form.SFormField moFieldIsDeleted;
    private erp.lib.form.SFormField moFieldIsCategoryDeleted;
    private erp.lib.form.SFormField moFieldIsAddress;

    private int mnParamBizPartnerType;
    private int mnParamBizPartnerCategoryFilter;

    private erp.mbps.data.SDataBizPartnerCategory[] maoDbmsCategorySettings;

    private erp.mbps.form.SPanelBizPartnerBranchAddress moPanelBizPartnerBranchAddress;

    private ImageIcon moIconHasCategorySup;
    private ImageIcon moIconHasCategoryCus;
    private ImageIcon moIconHasCategoryCdr;
    private ImageIcon moIconHasCategoryDbr;
    private ImageIcon moIconHasNotCategory;

    private int mnPkContactId;
    private int mnFormTypeExport;
    private boolean mbIsNeededPosSave;

    /** Creates new form SFormBizPartnerSimple */
    public SFormBizPartnerSimple(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient =  client;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jlFkBizPartnerIdentityTypeId = new javax.swing.JLabel();
        jcbFkBizPartnerIdentityTypeId = new javax.swing.JComboBox<SFormComponentItem>();
        jPanel22 = new javax.swing.JPanel();
        jlFirstName = new javax.swing.JLabel();
        jtfFirstName = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        jlLastName = new javax.swing.JLabel();
        jtfLastName = new javax.swing.JTextField();
        jPanel26 = new javax.swing.JPanel();
        jlBizPartner = new javax.swing.JLabel();
        jtfBizPartner = new javax.swing.JTextField();
        jPanel27 = new javax.swing.JPanel();
        jlBizPartnerCommercial = new javax.swing.JLabel();
        jtfBizPartnerCommercial = new javax.swing.JTextField();
        jbRecreateBizPartnerCommercial = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        jlFiscalId = new javax.swing.JLabel();
        jtfFiscalId = new javax.swing.JTextField();
        jlAlternativeId = new javax.swing.JLabel();
        jftAlternativeId = new javax.swing.JFormattedTextField();
        jPanel20 = new javax.swing.JPanel();
        jckIsAttRelatedParty = new javax.swing.JCheckBox();
        jckIsDeleted = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jlIconCustomer = new javax.swing.JLabel();
        jlDummy3 = new javax.swing.JLabel();
        jlIconSupplier = new javax.swing.JLabel();
        jlDummy4 = new javax.swing.JLabel();
        jlIconDebtor = new javax.swing.JLabel();
        jlDummy5 = new javax.swing.JLabel();
        jlIconCreditor = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jbCustomer = new javax.swing.JButton();
        jbSupplier = new javax.swing.JButton();
        jbDebtor = new javax.swing.JButton();
        jbCreditor = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jckIsAttBank = new javax.swing.JCheckBox();
        jckIsAttCarrier = new javax.swing.JCheckBox();
        jckIsAttSalesAgent = new javax.swing.JCheckBox();
        jPanel14 = new javax.swing.JPanel();
        jckIsAttEmployee = new javax.swing.JCheckBox();
        jckIsAttPartnerShareholder = new javax.swing.JCheckBox();
        jckIsCategoryDeleted = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jpBranchAddress = new javax.swing.JPanel();
        jpOficialAddress = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jckCaptureAddress = new javax.swing.JCheckBox();
        jPanel17 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jlFkBizPartnerTypeId = new javax.swing.JLabel();
        jcbFkBizPartnerTypeId = new javax.swing.JComboBox<SFormComponentItem>();
        jPanel8 = new javax.swing.JPanel();
        jlFkBizPartnerCategoryId = new javax.swing.JLabel();
        jcbFkBizPartnerCategoryId = new javax.swing.JComboBox();
        jPanel18 = new javax.swing.JPanel();
        jlKey = new javax.swing.JLabel();
        jftKey = new javax.swing.JFormattedTextField();
        jPanel23 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jlEmail = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jtfPkBizPartnerId_Ro = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Asociado de negocios");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Informaci√≥n general:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel13.setLayout(new java.awt.BorderLayout());

        jPanel19.setLayout(new java.awt.GridLayout(7, 1, 0, 5));

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkBizPartnerIdentityTypeId.setText("Tipo de identidad: *");
        jlFkBizPartnerIdentityTypeId.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel6.add(jlFkBizPartnerIdentityTypeId);

        jcbFkBizPartnerIdentityTypeId.setPreferredSize(new java.awt.Dimension(200, 23));
        jcbFkBizPartnerIdentityTypeId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFkBizPartnerIdentityTypeIdItemStateChanged(evt);
            }
        });
        jPanel6.add(jcbFkBizPartnerIdentityTypeId);

        jPanel19.add(jPanel6);

        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFirstName.setText("Nombre(s): *");
        jlFirstName.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel22.add(jlFirstName);

        jtfFirstName.setText("NOMBRES");
        jtfFirstName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel22.add(jtfFirstName);

        jPanel19.add(jPanel22);

        jPanel25.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlLastName.setText("Apellido(s): *");
        jlLastName.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel25.add(jlLastName);

        jtfLastName.setText("APELLIDOS");
        jtfLastName.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel25.add(jtfLastName);

        jPanel19.add(jPanel25);

        jPanel26.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartner.setText("Nombre: *");
        jlBizPartner.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel26.add(jlBizPartner);

        jtfBizPartner.setText("ASOCIADO DE NEGOCIOS");
        jtfBizPartner.setPreferredSize(new java.awt.Dimension(354, 23));
        jPanel26.add(jtfBizPartner);

        jPanel19.add(jPanel26);

        jPanel27.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlBizPartnerCommercial.setText("Nombre comercial:");
        jlBizPartnerCommercial.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel27.add(jlBizPartnerCommercial);

        jtfBizPartnerCommercial.setText("NOMBRE COMERCIAL");
        jtfBizPartnerCommercial.setPreferredSize(new java.awt.Dimension(354, 23));
        jPanel27.add(jtfBizPartnerCommercial);

        jbRecreateBizPartnerCommercial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/icon_std_action.gif"))); // NOI18N
        jbRecreateBizPartnerCommercial.setToolTipText("Crear nombre comercial");
        jbRecreateBizPartnerCommercial.setFocusable(false);
        jbRecreateBizPartnerCommercial.setPreferredSize(new java.awt.Dimension(23, 23));
        jPanel27.add(jbRecreateBizPartnerCommercial);

        jPanel19.add(jPanel27);

        jPanel29.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFiscalId.setText("RFC: *");
        jlFiscalId.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel29.add(jlFiscalId);

        jtfFiscalId.setText("RFC");
        jtfFiscalId.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel29.add(jtfFiscalId);

        jlAlternativeId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlAlternativeId.setText("CURP:");
        jlAlternativeId.setPreferredSize(new java.awt.Dimension(54, 23));
        jPanel29.add(jlAlternativeId);

        jftAlternativeId.setText("CURP");
        jftAlternativeId.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jftAlternativeId.setPreferredSize(new java.awt.Dimension(125, 23));
        jftAlternativeId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftAlternativeIdFocusLost(evt);
            }
        });
        jPanel29.add(jftAlternativeId);

        jPanel19.add(jPanel29);

        jPanel20.setLayout(new java.awt.GridLayout(1, 0));

        jckIsAttRelatedParty.setText("Es parte relacionada");
        jPanel20.add(jckIsAttRelatedParty);

        jckIsDeleted.setText("Asociado de negocios eliminado");
        jckIsDeleted.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel20.add(jckIsDeleted);

        jPanel19.add(jPanel20);

        jPanel13.add(jPanel19, java.awt.BorderLayout.NORTH);

        jPanel3.add(jPanel13, java.awt.BorderLayout.WEST);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Categor√≠as:"));
        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel15.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jLabel1.setPreferredSize(new java.awt.Dimension(25, 23));
        jPanel10.add(jLabel1);

        jlIconCustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/bp_cus.png"))); // NOI18N
        jPanel10.add(jlIconCustomer);

        jlDummy3.setPreferredSize(new java.awt.Dimension(50, 23));
        jPanel10.add(jlDummy3);

        jlIconSupplier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/bp_sup.png"))); // NOI18N
        jPanel10.add(jlIconSupplier);

        jlDummy4.setPreferredSize(new java.awt.Dimension(53, 23));
        jPanel10.add(jlDummy4);

        jlIconDebtor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/bp_dbr.png"))); // NOI18N
        jPanel10.add(jlIconDebtor);

        jlDummy5.setPreferredSize(new java.awt.Dimension(53, 23));
        jPanel10.add(jlDummy5);

        jlIconCreditor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/erp/img/bp_cdr.png"))); // NOI18N
        jPanel10.add(jlIconCreditor);

        jPanel15.add(jPanel10);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jbCustomer.setText("Cliente");
        jbCustomer.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jbCustomer.setPreferredSize(new java.awt.Dimension(90, 23));
        jPanel11.add(jbCustomer);

        jbSupplier.setText("Proveedor");
        jbSupplier.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jbSupplier.setPreferredSize(new java.awt.Dimension(90, 23));
        jPanel11.add(jbSupplier);

        jbDebtor.setText("Deudor div.");
        jbDebtor.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jbDebtor.setPreferredSize(new java.awt.Dimension(90, 23));
        jPanel11.add(jbDebtor);

        jbCreditor.setText("Acreedor div.");
        jbCreditor.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jbCreditor.setPreferredSize(new java.awt.Dimension(90, 23));
        jPanel11.add(jbCreditor);

        jPanel15.add(jPanel11);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckIsAttBank.setText("Es banco");
        jckIsAttBank.setPreferredSize(new java.awt.Dimension(115, 23));
        jPanel12.add(jckIsAttBank);

        jckIsAttCarrier.setText("Es transportista");
        jckIsAttCarrier.setPreferredSize(new java.awt.Dimension(115, 23));
        jPanel12.add(jckIsAttCarrier);

        jckIsAttSalesAgent.setText("Es agente ventas");
        jckIsAttSalesAgent.setPreferredSize(new java.awt.Dimension(115, 23));
        jPanel12.add(jckIsAttSalesAgent);

        jPanel15.add(jPanel12);

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jckIsAttEmployee.setText("Es empleado");
        jckIsAttEmployee.setPreferredSize(new java.awt.Dimension(115, 23));
        jckIsAttEmployee.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jckIsAttEmployeeItemStateChanged(evt);
            }
        });
        jPanel14.add(jckIsAttEmployee);

        jckIsAttPartnerShareholder.setText("Es socio/accionista");
        jPanel14.add(jckIsAttPartnerShareholder);

        jPanel15.add(jPanel14);

        jckIsCategoryDeleted.setText("Categor√≠a eliminada");
        jckIsCategoryDeleted.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel15.add(jckIsCategoryDeleted);

        jPanel9.add(jPanel15, java.awt.BorderLayout.NORTH);

        jPanel3.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3, java.awt.BorderLayout.NORTH);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jpBranchAddress.setBorder(javax.swing.BorderFactory.createTitledBorder("Informaci√≥n del domicilio:"));
        jpBranchAddress.setLayout(new java.awt.BorderLayout());

        jpOficialAddress.setLayout(new java.awt.BorderLayout());
        jpBranchAddress.add(jpOficialAddress, java.awt.BorderLayout.CENTER);

        jPanel21.setLayout(new java.awt.BorderLayout());

        jckCaptureAddress.setText("Capturar domicilio");
        jckCaptureAddress.setPreferredSize(new java.awt.Dimension(250, 23));
        jckCaptureAddress.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jckCaptureAddressItemStateChanged(evt);
            }
        });
        jPanel21.add(jckCaptureAddress, java.awt.BorderLayout.CENTER);

        jpBranchAddress.add(jPanel21, java.awt.BorderLayout.NORTH);

        jPanel4.add(jpBranchAddress, java.awt.BorderLayout.CENTER);

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Informaci√≥n adicional:"));
        jPanel17.setLayout(new java.awt.BorderLayout());

        jPanel16.setLayout(new java.awt.GridLayout(5, 1, 0, 5));

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkBizPartnerTypeId.setText("Tipo asoc. neg.: *");
        jlFkBizPartnerTypeId.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel7.add(jlFkBizPartnerTypeId);

        jcbFkBizPartnerTypeId.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel7.add(jcbFkBizPartnerTypeId);

        jPanel16.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlFkBizPartnerCategoryId.setText("Categor√≠a asoc. neg.: *");
        jlFkBizPartnerCategoryId.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel8.add(jlFkBizPartnerCategoryId);

        jcbFkBizPartnerCategoryId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbFkBizPartnerCategoryId.setEnabled(false);
        jcbFkBizPartnerCategoryId.setFocusable(false);
        jcbFkBizPartnerCategoryId.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel8.add(jcbFkBizPartnerCategoryId);

        jPanel16.add(jPanel8);

        jPanel18.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlKey.setText("Clave asoc. neg.: *");
        jlKey.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel18.add(jlKey);

        jftKey.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jftKey.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel18.add(jftKey);

        jPanel16.add(jPanel18);

        jPanel23.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel16.add(jPanel23);

        jPanel24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlEmail.setText("Cuenta correo-e");
        jlEmail.setPreferredSize(new java.awt.Dimension(125, 23));
        jPanel24.add(jlEmail);

        jtfEmail.setText("CUENTA CORREO-E");
        jtfEmail.setPreferredSize(new java.awt.Dimension(240, 23));
        jPanel24.add(jtfEmail);

        jPanel16.add(jPanel24);

        jPanel17.add(jPanel16, java.awt.BorderLayout.NORTH);

        jPanel4.add(jPanel17, java.awt.BorderLayout.WEST);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        jPanel41.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jtfPkBizPartnerId_Ro.setEditable(false);
        jtfPkBizPartnerId_Ro.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfPkBizPartnerId_Ro.setToolTipText("ID del asociado de negocios");
        jtfPkBizPartnerId_Ro.setFocusable(false);
        jtfPkBizPartnerId_Ro.setPreferredSize(new java.awt.Dimension(65, 23));
        jPanel41.add(jtfPkBizPartnerId_Ro);

        jPanel5.add(jPanel41);

        jPanel1.setPreferredSize(new java.awt.Dimension(392, 33));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jPanel1.add(jbCancel);

        jPanel5.add(jPanel1);

        getContentPane().add(jPanel5, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(992, 535));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivate();
    }//GEN-LAST:event_formWindowActivated

    private void jftAlternativeIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftAlternativeIdFocusLost
        focusLostAlternativeId();
    }//GEN-LAST:event_jftAlternativeIdFocusLost

    private void jcbFkBizPartnerIdentityTypeIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFkBizPartnerIdentityTypeIdItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            itemStateChangedBizPartenrIdentityType();
        }
    }//GEN-LAST:event_jcbFkBizPartnerIdentityTypeIdItemStateChanged

    private void jckCaptureAddressItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jckCaptureAddressItemStateChanged
        itemStateChangedCaptureAddress();
    }//GEN-LAST:event_jckCaptureAddressItemStateChanged

    private void jckIsAttEmployeeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jckIsAttEmployeeItemStateChanged
        itemStateChangedIsAttEmployee();
    }//GEN-LAST:event_jckIsAttEmployeeItemStateChanged

    private void renderKey() {
        switch (mnParamBizPartnerCategoryFilter) {
            case SDataConstantsSys.BPSS_CT_BP_CDR:
                if (miClient.getSessionXXX().getParamsErp().getIsKeyCreditorApplying()) {
                    jftKey.setEnabled(true);
                }
                else {
                    jftKey.setEnabled(false);
                }
                break;
            case SDataConstantsSys.BPSS_CT_BP_DBR:
                if (miClient.getSessionXXX().getParamsErp().getIsKeyDebtorApplying()) {
                    jftKey.setEnabled(true);
                }
                else {
                    jftKey.setEnabled(false);
                }
                break;
            default:
        }
    }

    private void initComponentsExtra() {
        mvFields = new Vector<SFormField>();

        moIconHasCategorySup = new ImageIcon(getClass().getResource("/erp/img/bp_sup.png"));
        moIconHasCategoryCus = new ImageIcon(getClass().getResource("/erp/img/bp_cus.png"));
        moIconHasCategoryCdr = new ImageIcon(getClass().getResource("/erp/img/bp_cdr.png"));
        moIconHasCategoryDbr = new ImageIcon(getClass().getResource("/erp/img/bp_dbr.png"));
        moIconHasNotCategory = new ImageIcon(getClass().getResource("/erp/img/bp_bw.png"));

        maoDbmsCategorySettings = new SDataBizPartnerCategory[SDataConstantsSys.BPSX_CT_BP_QTY];

        moFieldFkBizPartnerIdentityTypeId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkBizPartnerIdentityTypeId, jlFkBizPartnerIdentityTypeId);
        moFieldFirstName = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfFirstName, jlFirstName);
        moFieldFirstName.setLengthMax(100);
        moFieldLastName = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfLastName, jlLastName);
        moFieldLastName.setLengthMax(100);
        moFieldBizPartner = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfBizPartner, jlBizPartner);
        moFieldBizPartner.setLengthMax(202);
        moFieldBizPartnerCommercial = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfBizPartnerCommercial, jlBizPartnerCommercial);
        moFieldBizPartnerCommercial.setLengthMax(202);
        moFieldFiscalId = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfFiscalId, jlFiscalId);
        moFieldFiscalId.setLengthMax(25);
        moFieldFiscalId.setAutoCaseType(SLibConstants.CASE_UPPER);
        moFieldAlternativeId = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jftAlternativeId, jlAlternativeId);
        moFieldAlternativeId.setLengthMax(25);
        moFieldAlternativeId.setAutoCaseType(SLibConstants.CASE_UPPER);
        moFieldIsAttBank = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsAttBank);
        moFieldIsAttCarrier = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsAttCarrier);
        moFieldIsAttSalesAgent = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsAttSalesAgent);
        moFieldIsAttEmployee = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsAttEmployee);
        moFieldIsAttPartnerShareholder = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsAttPartnerShareholder);
        moFieldIsAttRelatedParty = new erp.lib.form.SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsAttRelatedParty);
        moFieldFkBizPartnerCategoryId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkBizPartnerCategoryId, jlFkBizPartnerCategoryId);
        moFieldFkBizPartnerTypeId = new SFormField(miClient, SLibConstants.DATA_TYPE_KEY, true, jcbFkBizPartnerTypeId, jlFkBizPartnerTypeId);
        moFieldKey = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jftKey, jlKey);
        moFieldKey.setLengthMax(25);
        moFieldIsDeleted = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsDeleted);
        moFieldIsCategoryDeleted = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckIsCategoryDeleted);
        moFieldIsAddress = new SFormField(miClient, SLibConstants.DATA_TYPE_BOOLEAN, false, jckCaptureAddress);
        moFieldEmail = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfEmail, jlEmail);
        moFieldEmail.setLengthMax(50);
        moFieldEmail.setAutoCaseType(SLibConstants.UNDEFINED);

        moPanelBizPartnerBranchAddress = new SPanelBizPartnerBranchAddress(miClient);
        jpOficialAddress.add(moPanelBizPartnerBranchAddress, BorderLayout.NORTH);

        mvFields.add(moFieldFkBizPartnerIdentityTypeId);
        mvFields.add(moFieldBizPartnerCommercial);
        mvFields.add(moFieldIsAttBank);
        mvFields.add(moFieldIsAttCarrier);
        mvFields.add(moFieldIsAttSalesAgent);
        mvFields.add(moFieldIsAttEmployee);
        mvFields.add(moFieldIsAttPartnerShareholder);
        mvFields.add(moFieldIsAttRelatedParty);
        mvFields.add(moFieldFkBizPartnerCategoryId);
        mvFields.add(moFieldFkBizPartnerTypeId);
        mvFields.add(moFieldKey);
        mvFields.add(moFieldEmail);

        jbOk.addActionListener(this);
        jbCancel.addActionListener(this);
        jbRecreateBizPartnerCommercial.addActionListener(this);

        jbSupplier.addActionListener(this);
        jbCustomer.addActionListener(this);
        jbCreditor.addActionListener(this);
        jbDebtor.addActionListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), action, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivate() {
        if (mbFirstTime) {
            mbFirstTime = false;
        }
    }

    private void focusLostAlternativeId() {
        if (jftAlternativeId.getText().trim().length() > 0) {
            jftAlternativeId.setText(jftAlternativeId.getText().toUpperCase());
        }
        else {
            jftAlternativeId.setText("");
        }
    }

    private void itemStateChangedBizPartenrIdentityType() {
        renderBizPartnerSettings();
        renderBizPartnerCategories();
    }

    private void itemStateChangedCaptureAddress() {
        moPanelBizPartnerBranchAddress.setFieldsEnabled(jckCaptureAddress.isSelected());
    }
    
    private void itemStateChangedIsAttEmployee() {
        if (jckIsAttEmployee.isEnabled()) {
            mnFormTypeExport = SDataConstants.BPSX_BP_EMP;
            mbIsNeededPosSave = jckIsAttEmployee.isSelected();
        }
    }
    
    private void renderBizPartnerSettings() {
        if (moFieldFkBizPartnerIdentityTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_BP_IDY_PER) {
            jtfFirstName.setEnabled(true);
            jtfLastName.setEnabled(true);
            jftAlternativeId.setEnabled(true);
            jtfBizPartner.setEnabled(false);
            moFieldAlternativeId.setMaskFormatter("UUUU######XXXXXXXX");
        }
        else {
            jtfFirstName.setEnabled(false);
            jtfLastName.setEnabled(false);
            jftAlternativeId.setEnabled(false);
            jtfBizPartner.setEnabled(true);
        }
    }

    private void renderBizPartnerCategories() {
        if (mnParamBizPartnerType == SDataConstants.BPSX_BP_CDR) {
            jbSupplier.setEnabled(true);
            jbCustomer.setEnabled(true);
            jbCreditor.setEnabled(false);
            jbDebtor.setEnabled(true);
            setParamBizPartnerCategoryFilter(SDataConstantsSys.BPSS_CT_BP_CDR);
        }
        else if (mnParamBizPartnerType == SDataConstants.BPSX_BP_DBR) {
            jbSupplier.setEnabled(true);
            jbCustomer.setEnabled(true);
            jbCreditor.setEnabled(true);
            jbDebtor.setEnabled(false);
            setParamBizPartnerCategoryFilter(SDataConstantsSys.BPSS_CT_BP_DBR);
        }
        setBizPartnerCategory();
        setIconCategory();
    }
    
    private void setFieldEnableEmployee(boolean enable) {
        jckIsAttEmployee.setEnabled(enable);
        jckIsCategoryDeleted.setEnabled(enable);
        jckIsDeleted.setEnabled(enable);
    }

    private void setIconCategory() {
        jlIconSupplier.setIcon(moBizPartner == null ? mnParamBizPartnerType == SDataConstants.BPSX_BP_SUP ? moIconHasCategorySup : moIconHasNotCategory : moBizPartner.getIsSupplier() || mnParamBizPartnerType == SDataConstants.BPSX_BP_SUP ? moIconHasCategorySup : moIconHasNotCategory);
        jlIconCustomer.setIcon(moBizPartner == null ? mnParamBizPartnerType == SDataConstants.BPSX_BP_CUS ? moIconHasCategoryCus : moIconHasNotCategory : moBizPartner.getIsCustomer() || mnParamBizPartnerType == SDataConstants.BPSX_BP_CUS ? moIconHasCategoryCus : moIconHasNotCategory);
        jlIconCreditor.setIcon(moBizPartner == null ? mnParamBizPartnerType == SDataConstants.BPSX_BP_CDR ? moIconHasCategoryCdr : moIconHasNotCategory : moBizPartner.getIsCreditor() || mnParamBizPartnerType == SDataConstants.BPSX_BP_CDR ? moIconHasCategoryCdr : moIconHasNotCategory);
        jlIconDebtor.setIcon(moBizPartner == null ? mnParamBizPartnerType == SDataConstants.BPSX_BP_DBR ? moIconHasCategoryDbr : moIconHasNotCategory : moBizPartner.getIsDebtor() || mnParamBizPartnerType == SDataConstants.BPSX_BP_DBR ? moIconHasCategoryDbr : moIconHasNotCategory);
    }

    private void setBizPartnerCategory() {
        SFormUtilities.populateComboBox(miClient, jcbFkBizPartnerCategoryId, SDataConstants.BPSS_CT_BP);
        if (mnParamBizPartnerType == SDataConstants.BPSX_BP_CDR) {
             moFieldFkBizPartnerCategoryId.setKey(new int [] {SDataConstantsSys.BPSS_CT_BP_CDR});
        }
        else if (mnParamBizPartnerType == SDataConstants.BPSX_BP_DBR) {
             moFieldFkBizPartnerCategoryId.setKey(new int [] {SDataConstantsSys.BPSS_CT_BP_DBR});
        }
    }

    private void setBizPartnerBranch() {
        SDataBizPartnerBranchAddress address = null;
        SDataBizPartnerBranchContact contact = null;

        if (moBizPartnerBranch == null) {
            moBizPartnerBranch = new SDataBizPartnerBranch();
            moBizPartnerBranch.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
        }
        else {
            moBizPartnerBranch.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
        }

        moBizPartnerBranch.getDbmsBizPartnerBranchAddresses().clear();

        moBizPartnerBranch.setFkBizPartnerBranchTypeId(SDataConstantsSys.BPSS_TP_BPB_HQ);
        moBizPartnerBranch.setBizPartnerBranch(SModSysConsts.TXT_HQ);
        moBizPartnerBranch.setIsAddressPrintable(true);
        moBizPartnerBranch.setIsDeleted(false);

        moBizPartnerBranch.setDbmsTaxRegion("");

        address = (SDataBizPartnerBranchAddress) moPanelBizPartnerBranchAddress.getRegistry();
        address.setFkAddressTypeId(SDataConstantsSys.BPSS_TP_ADD_OFF);
        address.setIsDefault(true);

        moBizPartnerBranch.getDbmsBizPartnerBranchAddresses().add(address);

        moBizPartnerBranch.getDbmsBizPartnerBranchContacts().clear();

        contact = new SDataBizPartnerBranchContact();
        //contact.setPkBizPartnerBranchId();
        contact.setPkContactId(mnPkContactId);
        contact.setContact("");
        contact.setContactPrefix("");
        contact.setContactSuffix("");
        contact.setLastname("");
        contact.setFirstname("");
        contact.setCharge("");
        contact.setTelAreaCode01("");
        contact.setTelNumber01("");
        contact.setTelExt01("");
        contact.setTelAreaCode02("");
        contact.setTelNumber02("");
        contact.setTelExt02("");
        contact.setTelAreaCode03("");
        contact.setTelNumber03("");
        contact.setTelExt03("");
        contact.setNextelId01("");
        contact.setNextelId02("");
        contact.setEmail01(moFieldEmail.getString());
        contact.setEmail02("");
        contact.setSkype01("");
        contact.setSkype02("");
        contact.setIsDeleted(false);
        contact.setFkContactTypeId(SDataConstantsSys.BPSS_TP_CON_ADM);
        contact.setFkTelephoneType01Id(SDataConstantsSys.BPSS_TP_TEL_NA);
        contact.setFkTelephoneType02Id(SDataConstantsSys.BPSS_TP_TEL_NA);
        contact.setFkTelephoneType03Id(SDataConstantsSys.BPSS_TP_TEL_NA);
        contact.setFkUserNewId(moBizPartnerBranch.getFkUserNewId());
        contact.setFkUserEditId(moBizPartnerBranch.getFkUserEditId());

        moBizPartnerBranch.getDbmsBizPartnerBranchContacts().add(contact);

        moBizPartner.getDbmsBizPartnerBranches().add(moBizPartnerBranch);
    }

    private void actionSupplier() {
        if (jbSupplier.isEnabled()) {
            mnFormTypeExport = SDataConstants.BPSX_BP_SUP;

            if (moBizPartner != null && moBizPartner.getIsSupplier()) {
                if (miClient.showMsgBoxConfirm("Para abrir la categor√≠a de proveedor para este asociado de negocios necesita guardar los cambios,\n¬øDesea continuar?") == JOptionPane.YES_OPTION) {
                    actionOk();
                    mbIsNeededPosSave = true;
                }
            }
            else if (miClient.showMsgBoxConfirm("Para crear la categor√≠a de proveedor para este asociado de negocios necesita guardar los cambios,\n¬øDesea continuar?") == JOptionPane.YES_OPTION) {
                actionOk();
                mbIsNeededPosSave = true;
            }
        }
    }

    private void actionCustomer() {
        if (jbCustomer.isEnabled()) {
            mnFormTypeExport = SDataConstants.BPSX_BP_CUS;

            if (moBizPartner != null && moBizPartner.getIsCustomer()) {
                if (miClient.showMsgBoxConfirm("Para abrir la categor√≠a de cliente para este asociado de negocios necesita guardar los cambios,\n¬øDesea continuar?") == JOptionPane.YES_OPTION) {
                    actionOk();
                    mbIsNeededPosSave = true;
                }
            }
            else if (miClient.showMsgBoxConfirm("Para crear la categor√≠a de cliente para este asociado de negocios necesita guardar los cambios,\n¬øDesea continuar?") == JOptionPane.YES_OPTION) {
                actionOk();
                mbIsNeededPosSave = true;
            }
        }
    }

    private void actionCreditor() {
        if (jbCreditor.isEnabled()) {
            mnFormTypeExport = SDataConstants.BPSX_BP_CDR;

            if (moBizPartner != null && moBizPartner.getIsCreditor()) {
                if (miClient.showMsgBoxConfirm("Para abrir la categor√≠a de acreedor diverso para este asociado de negocios necesita guardar los cambios,\n¬øDesea continuar?") == JOptionPane.YES_OPTION) {
                    actionOk();
                    mbIsNeededPosSave = true;
                }
            }
            else if (miClient.showMsgBoxConfirm("Para crear la categor√≠a de acreedor diverso para este asociado de negocios necesita guardar los cambios,\n¬øDesea continuar?") == JOptionPane.YES_OPTION) {
                actionOk();
                mbIsNeededPosSave = true;
            }
        }
    }

    private void actionDebtor() {
        if (jbDebtor.isEnabled()) {
            mnFormTypeExport = SDataConstants.BPSX_BP_DBR;

            if (moBizPartner != null && moBizPartner.getIsDebtor()) {
                if (miClient.showMsgBoxConfirm("Para abrir la categor√≠a de deudor diverso para este asociado de negocios necesita guardar los cambios,\n¬øDesea continuar?") == JOptionPane.YES_OPTION) {
                    actionOk();
                    mbIsNeededPosSave = true;
                }
            }
            else if (miClient.showMsgBoxConfirm("Para crear la categor√≠a de deudor diverso para este asociado de negocios necesita guardar los cambios,\n¬øDesea continuar?") == JOptionPane.YES_OPTION) {
                actionOk();
                mbIsNeededPosSave = true;
            }
        }
    }

    private void actionRecreateBizPartnerCommercial() {
        jtfBizPartnerCommercial.setText("");
        if (moFieldFkBizPartnerIdentityTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_BP_IDY_PER) {
            jtfBizPartnerCommercial.setText(jtfLastName.getText() + ", " + jtfFirstName.getText());
            jtfBizPartnerCommercial.requestFocus();
        }
        else {
            jtfBizPartnerCommercial.setText(jtfBizPartner.getText());
            jtfBizPartnerCommercial.requestFocus();
        }
    }

    private void actionOk() {
        SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbCreditor;
    private javax.swing.JButton jbCustomer;
    private javax.swing.JButton jbDebtor;
    private javax.swing.JButton jbOk;
    private javax.swing.JButton jbRecreateBizPartnerCommercial;
    private javax.swing.JButton jbSupplier;
    private javax.swing.JComboBox jcbFkBizPartnerCategoryId;
    private javax.swing.JComboBox<SFormComponentItem> jcbFkBizPartnerIdentityTypeId;
    private javax.swing.JComboBox<SFormComponentItem> jcbFkBizPartnerTypeId;
    private javax.swing.JCheckBox jckCaptureAddress;
    private javax.swing.JCheckBox jckIsAttBank;
    private javax.swing.JCheckBox jckIsAttCarrier;
    private javax.swing.JCheckBox jckIsAttEmployee;
    private javax.swing.JCheckBox jckIsAttPartnerShareholder;
    private javax.swing.JCheckBox jckIsAttRelatedParty;
    private javax.swing.JCheckBox jckIsAttSalesAgent;
    private javax.swing.JCheckBox jckIsCategoryDeleted;
    private javax.swing.JCheckBox jckIsDeleted;
    private javax.swing.JFormattedTextField jftAlternativeId;
    private javax.swing.JFormattedTextField jftKey;
    private javax.swing.JLabel jlAlternativeId;
    private javax.swing.JLabel jlBizPartner;
    private javax.swing.JLabel jlBizPartnerCommercial;
    private javax.swing.JLabel jlDummy3;
    private javax.swing.JLabel jlDummy4;
    private javax.swing.JLabel jlDummy5;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlFirstName;
    private javax.swing.JLabel jlFiscalId;
    private javax.swing.JLabel jlFkBizPartnerCategoryId;
    private javax.swing.JLabel jlFkBizPartnerIdentityTypeId;
    private javax.swing.JLabel jlFkBizPartnerTypeId;
    private javax.swing.JLabel jlIconCreditor;
    private javax.swing.JLabel jlIconCustomer;
    private javax.swing.JLabel jlIconDebtor;
    private javax.swing.JLabel jlIconSupplier;
    private javax.swing.JLabel jlKey;
    private javax.swing.JLabel jlLastName;
    private javax.swing.JPanel jpBranchAddress;
    private javax.swing.JPanel jpOficialAddress;
    private javax.swing.JTextField jtfBizPartner;
    private javax.swing.JTextField jtfBizPartnerCommercial;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfFirstName;
    private javax.swing.JTextField jtfFiscalId;
    private javax.swing.JTextField jtfLastName;
    private javax.swing.JTextField jtfPkBizPartnerId_Ro;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        moBizPartnerCategory = null;
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        moBizPartner = null;
        moBizPartnerBranch = null;
        moBizPartnerCategory = null;

        mnFormTypeExport = SLibConstants.UNDEFINED;
        mbIsNeededPosSave = false;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        jtfFirstName.setText("");
        jtfLastName.setText("");
        jtfBizPartner.setText("");
        jtfFiscalId.setText("");
        jftAlternativeId.setText("");
        jtfPkBizPartnerId_Ro.setText("");
        jtfFirstName.setEnabled(false);
        jtfLastName.setEnabled(false);
        jtfBizPartner.setEnabled(false);
        jftAlternativeId.setEnabled(false);
        jtfEmail.setText("");

        renderBizPartnerCategories();
        renderKey();
        moPanelBizPartnerBranchAddress.formReset();
        moPanelBizPartnerBranchAddress.setParamIsInMainWindow(true);
        jckCaptureAddress.setSelected(false);
        itemStateChangedCaptureAddress();

        mnPkContactId = 0;
        jckIsDeleted.setEnabled(false);
        jckIsCategoryDeleted.setEnabled(false);
        setFieldEnableEmployee(false);
    }

    @Override
    public void formRefreshCatalogues() {
        int bizCategory = 0;

        renderBizPartnerCategories();
        SFormUtilities.populateComboBox(miClient, jcbFkBizPartnerIdentityTypeId, SDataConstants.BPSS_TP_BP_IDY);

        switch (mnParamBizPartnerCategoryFilter) {
            case SDataConstantsSys.BPSS_CT_BP_CDR:
                bizCategory = SDataConstants.BPSX_TP_BP_CDR;
                break;
            case SDataConstantsSys.BPSS_CT_BP_DBR:
                bizCategory = SDataConstants.BPSX_TP_BP_DBR;
                break;
            default:
                break;
        }

        SFormUtilities.populateComboBox(miClient, jcbFkBizPartnerTypeId, bizCategory);
        moPanelBizPartnerBranchAddress.formRefreshCatalogues();
    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        String email = "";
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        if (!validation.getIsError()) {
            Object[] oParamsIn = new Object[] { moBizPartner == null ? 0 : moBizPartner.getPkBizPartnerId(), moFieldBizPartner.getString() };
            Object[] oParamsInFiscal = new Object[] { moBizPartner == null ? 0 : moBizPartner.getPkBizPartnerId(), jtfFiscalId.getText().trim()};

            if (moFieldFkBizPartnerIdentityTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_BP_IDY_PER && jtfFirstName.getText().length() == 0) {
                validation.setComponent(jtfFirstName);
                validation.setMessage(SLibConstants.MSG_ERR_GUI_FIELD_EMPTY + "'" + jlFirstName.getText() + "'.");
            }
            else if (moFieldFkBizPartnerIdentityTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_BP_IDY_ORG && jtfBizPartner.getText().length() == 0) {
                validation.setComponent(jtfBizPartner);
                validation.setMessage(SLibConstants.MSG_ERR_GUI_FIELD_EMPTY + "'" + jlBizPartner.getText() + "'.");
            }
            else if (jtfFiscalId.getText().trim().length() > 0 && jtfFiscalId.getText().trim().length() < (moFieldFkBizPartnerIdentityTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_BP_IDY_PER ? 13 : 12)) {
                validation.setComponent(jtfFiscalId);
                validation.setMessage("El valor para el campo '" + jlFiscalId.getText() + "' debe estar completo.");
            }
            else {
                try {
                    if (!validation.getIsError() && jckIsDeleted.isSelected() && SFinUtilities.hasBizPartnerMovesFinance(miClient, miClient.getSessionXXX().getSystemYear(), moBizPartner.getPkBizPartnerId())) {
                        validation.setMessage("No se puede eliminar el '" + getTitle() + "' debido a que tiene movimientos en el ejercicio actual.");
                        validation.setComponent(jckIsDeleted);
                    }
                }
                catch (Exception e) {
                    SLibUtilities.renderException(this, e);
                }

                if (SDataUtilities.callProcedureVal(miClient, SProcConstants.BPSU_BP, oParamsIn, SLibConstants.EXEC_MODE_VERBOSE) > 0) {
                    if (miClient.showMsgBoxConfirm("El valor del campo '" + jlBizPartner.getText() + "' ya existe, ¬ødesea conservalo?") == JOptionPane.NO_OPTION) {
                        validation.setTabbedPaneIndex(0);
                        validation.setComponent(jtfBizPartner);
                        validation.setIsError(true);
                    }
                }

                if (!validation.getIsError()) {
                    if (SDataUtilities.callProcedureVal(miClient, SProcConstants.BPSU_BP_FISCAL_ID, oParamsInFiscal, SLibConstants.EXEC_MODE_VERBOSE) > 0) {
                        if (miClient.showMsgBoxConfirm("El valor del campo '" + jlFiscalId.getText() + "' ya existe, ¬ødesea conservalo?") == JOptionPane.NO_OPTION) {
                            validation.setTabbedPaneIndex(0);
                            validation.setComponent(jtfFiscalId);
                            validation.setIsError(true);
                        }
                    }
                }

                if (!validation.getIsError()) {
                    if (mnParamBizPartnerCategoryFilter == SDataConstantsSys.BPSS_CT_BP_CDR && miClient.getSessionXXX().getParamsErp().getIsKeyCreditorApplying() && moFieldKey.getString().length() == 0) {
                        validation.setComponent(jftKey);
                        validation.setMessage("Se debe ingresar un valor para el campo '" + jlKey.getText() + "'.");
                    }
                    else if (mnParamBizPartnerCategoryFilter == SDataConstantsSys.BPSS_CT_BP_DBR && miClient.getSessionXXX().getParamsErp().getIsKeyDebtorApplying() && moFieldKey.getString().length() == 0) {
                        validation.setComponent(jftKey);
                        validation.setMessage("Se debe ingresar un valor para el campo '" + jlKey.getText() + "'.");
                    }
                }
            }
        }

        if (!validation.getIsError() && jckCaptureAddress.isSelected()) {
            validation = moPanelBizPartnerBranchAddress.formValidate();
        }

        if (!validation.getIsError() && moFieldEmail.getString().length() > 0) {
            email = SLibUtilities.validateEmail(moFieldEmail.getString());
            if (email.length() > 0) {
                validation.setComponent(jtfEmail);
                validation.setMessage(email);
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        moBizPartner = (SDataBizPartner) registry;

        moFieldFkBizPartnerIdentityTypeId.setFieldValue(new int[] { moBizPartner.getFkBizPartnerIdentityTypeId() });
        renderBizPartnerSettings();
        moFieldFirstName.setFieldValue(moBizPartner.getFirstname());
        moFieldLastName.setFieldValue(moBizPartner.getLastname());
        if (moBizPartner.getFkBizPartnerIdentityTypeId() == SDataConstantsSys.BPSS_TP_BP_IDY_PER) {
            moFieldBizPartner.setFieldValue("");
        }
        else {
            moFieldBizPartner.setFieldValue(moBizPartner.getBizPartner());
        }
        moFieldBizPartnerCommercial.setFieldValue(moBizPartner.getBizPartner().compareTo(moBizPartner.getBizPartnerCommercial()) == 0 ? "" : moBizPartner.getBizPartnerCommercial());
        moFieldFiscalId.setFieldValue(moBizPartner.getFiscalId());
        moFieldAlternativeId.setFieldValue(moBizPartner.getAlternativeId());
        moFieldIsAttBank.setFieldValue(moBizPartner.getIsAttributeBank());
        moFieldIsAttCarrier.setFieldValue(moBizPartner.getIsAttributeCarrier());
        moFieldIsAttSalesAgent.setFieldValue(moBizPartner.getIsAttributeSalesAgent());
        moFieldIsAttEmployee.setFieldValue(moBizPartner.getIsAttributeEmployee());
        moFieldIsAttPartnerShareholder.setFieldValue(moBizPartner.getIsAttributePartnerShareholder());
        moFieldIsAttRelatedParty.setFieldValue(moBizPartner.getIsAttributeRelatedParty());
        moFieldIsDeleted.setFieldValue(moBizPartner.getIsDeleted());
        jtfPkBizPartnerId_Ro.setText("" + moBizPartner.getPkBizPartnerId());

        maoDbmsCategorySettings[0] = moBizPartner.getDbmsCategorySettingsCdr();
        maoDbmsCategorySettings[1] = moBizPartner.getDbmsCategorySettingsDbr();

        if (mnParamBizPartnerCategoryFilter == SDataConstantsSys.BPSS_CT_BP_CDR) {
            moBizPartnerCategory = maoDbmsCategorySettings[0];
        }
        else if (mnParamBizPartnerCategoryFilter == SDataConstantsSys.BPSS_CT_BP_DBR) {
            moBizPartnerCategory = maoDbmsCategorySettings[1];
        }

        if (moBizPartnerCategory != null) {
            moFieldFkBizPartnerCategoryId.setFieldValue(new int[] { moBizPartnerCategory.getFkBizPartnerCategoryId()});
            moFieldFkBizPartnerTypeId.setFieldValue(new int[] { moBizPartnerCategory.getFkBizPartnerCategoryId(), moBizPartnerCategory.getFkBizPartnerTypeId() });

            if (moBizPartnerCategory.getFkBizPartnerCategoryId() == SDataConstantsSys.BPSS_CT_BP_SUP) {
                moFieldKey.setMaskFormatter(miClient.getSessionXXX().getParamsErp().getFormatKeySupplier());
            }
            else if (moBizPartnerCategory.getFkBizPartnerCategoryId() == SDataConstantsSys.BPSS_CT_BP_CUS) {
                moFieldKey.setMaskFormatter(miClient.getSessionXXX().getParamsErp().getFormatKeyCustomer());
            }

            moFieldKey.setFieldValue(moBizPartnerCategory.getKey());
            moFieldIsCategoryDeleted.setFieldValue(moBizPartnerCategory.getIsDeleted());
        }
        renderKey();

        moBizPartnerBranch = moBizPartner.getDbmsHqBranch();
        moPanelBizPartnerBranchAddress.setRegistry(moBizPartnerBranch.getDbmsBizPartnerBranchAddressOfficial());

        if (!moBizPartner.getDbmsHqBranch().getDbmsBizPartnerBranchContacts().isEmpty()) {
            mnPkContactId = moBizPartner.getDbmsHqBranch().getDbmsBizPartnerBranchContacts().get(0).getPkContactId();
            moFieldEmail.setFieldValue(moBizPartner.getDbmsHqBranch().getDbmsBizPartnerBranchContacts().get(0).getEmail01());
        }

        jckCaptureAddress.setSelected(moBizPartner.getDbmsHqBranch().getDbmsBizPartnerBranchAddressOfficial().getStreet().length() > 0);
        itemStateChangedCaptureAddress();

        jckIsDeleted.setEnabled(true);
        jckIsCategoryDeleted.setEnabled(true);
        setFieldEnableEmployee(moBizPartner.getDbmsDataEmployee() == null);
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        if (moBizPartner == null) {
            moBizPartner = new SDataBizPartner();
            moBizPartner.setFkFiscalBankId(SModSysConsts.FINS_FISCAL_BANK_NA);
            moBizPartner.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
        }
        else {
            moBizPartner.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
        }

        moBizPartner.setFkBizPartnerIdentityTypeId(moFieldFkBizPartnerIdentityTypeId.getKeyAsIntArray()[0]);
        moBizPartner.setFkTaxIdentityId(moFieldFkBizPartnerIdentityTypeId.getKeyAsIntArray()[0]);
        moBizPartner.setFkBizAreaId(SDataConstantsSys.BPSU_BA_DEFAULT);

        if (moFieldFkBizPartnerIdentityTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_BP_IDY_PER) {
            moBizPartner.setFirstname(moFieldFirstName.getString());
            moBizPartner.setLastname(moFieldLastName.getString());
            moBizPartner.setBizPartner(moFieldLastName.getString().trim() + ", " + moFieldFirstName.getString().trim());
        }
        else {
            moBizPartner.setFirstname("");
            moBizPartner.setLastname("");
            moBizPartner.setBizPartner(moFieldBizPartner.getString());
        }

        moBizPartner.setBizPartnerCommercial(moFieldBizPartnerCommercial.getString().isEmpty() ? moBizPartner.getBizPartner() : moFieldBizPartnerCommercial.getString());

        moBizPartner.setFiscalId(moFieldFiscalId.getString().toUpperCase());
        //moBizPartner.setFiscalFrgId();
        //moBizPartner.setCodeBankSantander();
        //moBizPartner.setCodeBankBanBajio();
        //moBizPartner.setWeb();

        if (moFieldFkBizPartnerIdentityTypeId.getKeyAsIntArray()[0] == SDataConstantsSys.BPSS_TP_BP_IDY_PER) {
            moBizPartner.setAlternativeId(moFieldAlternativeId.getString().toUpperCase());
        }
        else {
            moBizPartner.setAlternativeId("");
        }

        switch (mnParamBizPartnerType) {
            case SDataConstants.BPSX_BP_CDR:
                moBizPartner.setIsCreditor(true);
                break;
            case SDataConstants.BPSX_BP_DBR:
                moBizPartner.setIsDebtor(true);
                break;
            default:
        }
        moBizPartner.setIsAttributeBank(moFieldIsAttBank.getBoolean());
        moBizPartner.setIsAttributeCarrier(moFieldIsAttCarrier.getBoolean());
        moBizPartner.setIsAttributeSalesAgent(moFieldIsAttSalesAgent.getBoolean());
        moBizPartner.setIsAttributeEmployee(moFieldIsAttEmployee.getBoolean() && !jckIsAttEmployee.isEnabled());
        moBizPartner.setIsAttributePartnerShareholder(moFieldIsAttPartnerShareholder.getBoolean());
        moBizPartner.setIsAttributeRelatedParty(moFieldIsAttRelatedParty.getBoolean());
        moBizPartner.setIsDeleted(moFieldIsDeleted.getBoolean());

        // Save business partner category:

        if (moBizPartnerCategory == null) {
            moBizPartnerCategory = new SDataBizPartnerCategory();
            moBizPartnerCategory.setFkUserNewId(miClient.getSession().getUser().getPkUserId());
        }
        else {
            moBizPartnerCategory.setFkUserEditId(miClient.getSession().getUser().getPkUserId());
        }

        moBizPartnerCategory.setPkBizPartnerCategoryId(moFieldFkBizPartnerCategoryId.getKeyAsIntArray()[0]);
        moBizPartnerCategory.setCreditLimit(0);
        moBizPartnerCategory.setDaysOfCredit(0);
        moBizPartnerCategory.setDaysOfGrace(0);
        moBizPartnerCategory.setDateStart(SLibTimeUtilities.getBeginOfYear(miClient.getSessionXXX().getWorkingDate()));
        moBizPartnerCategory.setFkBizPartnerCategoryId(moFieldFkBizPartnerCategoryId.getKeyAsIntArray()[0]);
        moBizPartnerCategory.setFkBizPartnerTypeId(moFieldFkBizPartnerTypeId.getKeyAsIntArray()[1]);
        moBizPartnerCategory.setKey(moFieldKey.getString());
        moBizPartnerCategory.setFkCfdAddendaTypeId(SDataConstantsSys.BPSS_TP_CFD_ADD_NA);
        moBizPartnerCategory.setIsDeleted(moFieldIsCategoryDeleted.getBoolean());
        moBizPartnerCategory.setDbmBizPartnerType(jcbFkBizPartnerTypeId.getSelectedItem().toString());

        switch (mnParamBizPartnerCategoryFilter) {
            case SDataConstantsSys.BPSS_CT_BP_CDR:
                moBizPartner.setDbmsCategorySettingsCdr(moBizPartnerCategory);
                break;
            case SDataConstantsSys.BPSS_CT_BP_DBR:
                moBizPartner.setDbmsCategorySettingsDbr(moBizPartnerCategory);
                break;
            default:
        }

        setBizPartnerBranch();

        return moBizPartner;
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        switch (type) {
            case SDataConstantsSys.VALUE_BIZ_PARTNER_TYPE:
                mnParamBizPartnerType = ((int[]) value)[0];

                switch (mnParamBizPartnerType) {
                    case SDataConstants.BPSX_BP_DBR:
                        setTitle("Deudor diverso");
                        jckIsCategoryDeleted.setText("Deudor diverso eliminado");
                        break;
                    case SDataConstants.BPSX_BP_CDR:
                        setTitle("Acreedor diverso");
                        jckIsCategoryDeleted.setText("Acreedor diverso eliminado");
                        break;
                    default:
                        setTitle("Asociado de negocios");
                        jckIsCategoryDeleted.setText("Asociado eliminado");
                }
                break;
            default:
        }
    }

    @Override
    public java.lang.Object getValue(int type) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        return null;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
            else if (button == jbRecreateBizPartnerCommercial) {
                actionRecreateBizPartnerCommercial();
            }
            else if (button == jbSupplier) {
                actionSupplier();
            }
            else if (button == jbCustomer) {
                actionCustomer();
            }
            else if (button == jbCreditor) {
                actionCreditor();
            }
            else if (button == jbDebtor) {
                actionDebtor();
            }
        }
    }

    public void setParamBizPartnerCategoryFilter(int n) { mnParamBizPartnerCategoryFilter = n; }

    @Override
    public SLibMethod getPostSaveMethod(SDataRegistry registry) {
        SLibMethod method = null;

        if (mbIsNeededPosSave) {
            try {
                method = new SLibMethod(registry, registry.getClass().getMethod("openCategory", new Class[] { SClientInterface.class, int.class, Object.class }), new Object[] { miClient, mnFormTypeExport, registry.getPrimaryKey() });
            }
            catch (NoSuchMethodException | SecurityException e) {
                SLibUtils.showException(this, e);
            }
        }

        return method;
    }
}
