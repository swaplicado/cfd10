/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SFormNewItemCode.java
 *
 * Created on 14/10/2010, 10:49:11 AM
 */

package erp.mitm.form;

import erp.data.SDataConstants;
import erp.data.SDataUtilities;
import erp.lib.SLibConstants;
import erp.lib.SLibUtilities;
import erp.lib.form.SFormField;
import erp.lib.form.SFormUtilities;
import erp.lib.form.SFormValidation;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.AbstractAction;

/**
 *
 * @author Alfonso Flores
 */
public class SFormNewItemCode extends javax.swing.JDialog implements erp.lib.form.SFormInterface, java.awt.event.ActionListener {

    private int mnFormType;
    private int mnFormResult;
    private int mnFormStatus;
    private boolean mbFirstTime;
    private boolean mbResetingForm;
    private java.util.Vector<erp.lib.form.SFormField> mvFields;
    private erp.client.SClientInterface miClient;

    private erp.lib.form.SFormField moFieldCode;
    private erp.lib.form.SFormField moFieldMax;
    private erp.lib.form.SFormField moFieldNewCode;

    private java.lang.String msParamItemGeneric;
    private java.lang.String msParamItemKey;
    private int mnParamPkItemGeneric;

    /** Creates new form SFormNewItemCode */
    public SFormNewItemCode(erp.client.SClientInterface client) {
        super(client.getFrame(), true);
        miClient = client;

        initComponents();
        initComponentsExtra();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlItemGeneric = new javax.swing.JLabel();
        jtfItemGeneric = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jlItemKey = new javax.swing.JLabel();
        jtfItemKey = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        jtfCode = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jlMax = new javax.swing.JLabel();
        jtfMax = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jlNewCode = new javax.swing.JLabel();
        jtfNewCode = new javax.swing.JTextField();
        jbNewCode = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generación de código de ítem");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(392, 33));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jbOk.setText("Aceptar");
        jbOk.setToolTipText("[Ctrl + Enter]");
        jbOk.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel1.add(jbOk);

        jbCancel.setText("Cancelar");
        jbCancel.setToolTipText("[Escape]");
        jPanel1.add(jbCancel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del código:"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(5, 1, 0, 1));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlItemGeneric.setText("Ítem genérico:");
        jlItemGeneric.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlItemGeneric);

        jtfItemGeneric.setEditable(false);
        jtfItemGeneric.setText("ITEM GENERIC");
        jtfItemGeneric.setFocusable(false);
        jtfItemGeneric.setPreferredSize(new java.awt.Dimension(272, 23));
        jPanel4.add(jtfItemGeneric);

        jPanel3.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlItemKey.setText("Clave del ítem: ");
        jlItemKey.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlItemKey);

        jtfItemKey.setEditable(false);
        jtfItemKey.setText("ITEM KEY");
        jtfItemKey.setFocusable(false);
        jtfItemKey.setPreferredSize(new java.awt.Dimension(272, 23));
        jPanel5.add(jtfItemKey);

        jPanel3.add(jPanel5);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlCode.setText("Código del ítem:");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlCode);

        jtfCode.setText("CODE");
        jtfCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jtfCode);

        jPanel3.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlMax.setText("Tope:");
        jlMax.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlMax);

        jtfMax.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfMax.setText("MAX");
        jtfMax.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jtfMax);

        jPanel3.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 0));

        jlNewCode.setText("Nuevo código: *");
        jlNewCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlNewCode);

        jtfNewCode.setText("NEW CODE");
        jtfNewCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jtfNewCode);

        jbNewCode.setText("Generar");
        jbNewCode.setToolTipText("Generar nuevo código");
        jbNewCode.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel8.add(jbNewCode);

        jPanel3.add(jPanel8);

        jPanel2.add(jPanel3, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        windowActivated();
    }//GEN-LAST:event_formWindowActivated

    private void initComponentsExtra() {
        mvFields = new Vector<SFormField>();

        moFieldCode = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, false, jtfCode, jlCode);
        moFieldCode.setLengthMax(10);
        moFieldMax = new SFormField(miClient, SLibConstants.DATA_TYPE_INTEGER, false, jtfMax, jlMax);
        moFieldNewCode = new SFormField(miClient, SLibConstants.DATA_TYPE_STRING, true, jtfNewCode, jlNewCode);
        moFieldNewCode.setLengthMax(10);

        mvFields.add(moFieldCode);
        mvFields.add(moFieldMax);
        mvFields.add(moFieldNewCode);

        jbOk.addActionListener(this);
        jbCancel.addActionListener(this);
        jbNewCode.addActionListener(this);

        AbstractAction actionOk = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionOk(); }
        };

        SFormUtilities.putActionMap(getRootPane(), actionOk, "ok", KeyEvent.VK_ENTER, KeyEvent.CTRL_DOWN_MASK);

        AbstractAction action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) { actionCancel(); }
        };

        SFormUtilities.putActionMap(getRootPane(), action, "cancel", KeyEvent.VK_ESCAPE, 0);
    }

    private void windowActivated() {
        if (mbFirstTime) {
            mbFirstTime = false;
            jtfItemGeneric.setText(msParamItemGeneric);
            jtfItemKey.setText(msParamItemKey);
            jtfCode.requestFocus();
        }
    }

    private void actionOk() {
        SFormValidation validation = formValidate();

        if (validation.getIsError()) {
            if (validation.getComponent() != null) {
                validation.getComponent().requestFocus();
            }
            if (validation.getMessage().length() > 0) {
                miClient.showMsgBoxWarning(validation.getMessage());
            }
        }
        else {
            mnFormResult = SLibConstants.FORM_RESULT_OK;
            setVisible(false);
        }
    }

    private void actionCancel() {
        mnFormResult = SLibConstants.FORM_RESULT_CANCEL;
        setVisible(false);
    }

    private void actionNewCode() {
        try {
            moFieldNewCode.setFieldValue(moFieldCode.getString() + SDataUtilities.obtainNextItemCode(miClient, mnParamPkItemGeneric, msParamItemKey, moFieldCode.getString(), moFieldMax.getInteger()));
            jtfNewCode.requestFocus();
        }
        catch (Exception e) {
            SLibUtilities.renderException(this, e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbNewCode;
    private javax.swing.JButton jbOk;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlItemGeneric;
    private javax.swing.JLabel jlItemKey;
    private javax.swing.JLabel jlMax;
    private javax.swing.JLabel jlNewCode;
    private javax.swing.JTextField jtfCode;
    private javax.swing.JTextField jtfItemGeneric;
    private javax.swing.JTextField jtfItemKey;
    private javax.swing.JTextField jtfMax;
    private javax.swing.JTextField jtfNewCode;
    // End of variables declaration//GEN-END:variables

    @Override
    public void formClearRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void formReset() {
        mnFormResult = SLibConstants.UNDEFINED;
        mnFormStatus = SLibConstants.UNDEFINED;
        mbFirstTime = true;

        for (int i = 0; i < mvFields.size(); i++) {
            ((erp.lib.form.SFormField) mvFields.get(i)).resetField();
        }

        jtfItemGeneric.setText("");
        jtfItemKey.setText("");
    }

    @Override
    public void formRefreshCatalogues() {

    }

    @Override
    public erp.lib.form.SFormValidation formValidate() {
        SFormValidation validation = new SFormValidation();

        for (int i = 0; i < mvFields.size(); i++) {
            if (!((erp.lib.form.SFormField) mvFields.get(i)).validateField()) {
                validation.setIsError(true);
                validation.setComponent(((erp.lib.form.SFormField) mvFields.get(i)).getComponent());
                break;
            }
        }

        return validation;
    }

    @Override
    public void setFormStatus(int status) {
        mnFormStatus = status;
    }

    @Override
    public void setFormVisible(boolean visible) {
        setVisible(visible);
    }

    @Override
    public int getFormStatus() {
        return mnFormStatus;
    }

    @Override
    public int getFormResult() {
        return mnFormResult;
    }

    @Override
    public void setRegistry(erp.lib.data.SDataRegistry registry) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public erp.lib.data.SDataRegistry getRegistry() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void setValue(int type, java.lang.Object value) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public java.lang.Object getValue(int type) {
        Object o = null;

        if (type == SDataConstants.ITMU_ITEM) {
            o = moFieldNewCode.getString();
        }

        return o;
    }

    @Override
    public javax.swing.JLabel getTimeoutLabel() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        if (e.getSource() instanceof javax.swing.JButton) {
            javax.swing.JButton button = (javax.swing.JButton) e.getSource();

            if (button == jbOk) {
                actionOk();
            }
            else if (button == jbCancel) {
                actionCancel();
            }
            else if (button == jbNewCode) {
                actionNewCode();
            }
        }
    }

    public void setParamItemGeneric(java.lang.String s) { msParamItemGeneric = s; }
    public void setParamItemKey(java.lang.String s) { msParamItemKey = s; }
    public void setParamPkItemGeneric(int n) { mnParamPkItemGeneric = n; }
}
